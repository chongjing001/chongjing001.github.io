<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Never give up</title>
  
  <subtitle>如果有选择，那就选择最好的;如果没有选择，那就努力做到最好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-28T11:40:55.978Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ChongJing001</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis基础 String（字符串）- 常用指令</title>
    <link href="http://yoursite.com/2018/12/28/Redis%E5%9F%BA%E7%A1%80-String%EF%BC%88%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%89--%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/12/28/Redis基础-String（字符串）--常用指令/</id>
    <published>2018-12-28T11:35:23.778Z</published>
    <updated>2018-12-28T11:40:55.978Z</updated>
    
    <content type="html"><![CDATA[<ul><li>1.set - 创建键值对 例：set abc 123</li><li>2.get - 获取键值对    get abc</li><li><p>3.setbit -   bit默认初始化为0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis&gt;setbit num 100 1</span><br><span class="line">(integer)0</span><br><span class="line">redis&gt;setbit num 99  # 除100其他数都返回0</span><br><span class="line">（integer）0</span><br><span class="line">redis&gt;setbit num 100 </span><br><span class="line">(interger)1</span><br></pre></td></tr></table></figure></li><li><p>4.setex - 产生键值对，并设置存活时间，如果key值存在则覆盖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#当keys不存在时进行setex</span><br><span class="line">redis&gt;setex number 60 1000</span><br><span class="line">OK</span><br><span class="line">redis&gt;get number </span><br><span class="line">&apos;1000&apos;</span><br><span class="line">redis&gt;ttl number #剩余生存时间</span><br><span class="line">(integer)50</span><br><span class="line"></span><br><span class="line">#key存在时，setex覆盖旧值</span><br><span class="line">redis&gt;setex name 旧值</span><br><span class="line">OK</span><br><span class="line">redis&gt;setex name 100 &apos;新值&apos;</span><br><span class="line">OK</span><br><span class="line">redis&gt;get name</span><br><span class="line">&apos;新值&apos;</span><br><span class="line">redis&gt;ttl name</span><br><span class="line">(integer)90</span><br></pre></td></tr></table></figure></li><li><p>5.exists - 当key值不存在时，可以创建，存在时创建失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># 对非空字符串进行 SETRANGE</span><br><span class="line"></span><br><span class="line">redis&gt; SET greeting &quot;hello world&quot;</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">redis&gt; SETRANGE greeting 6 &quot;Redis&quot;</span><br><span class="line">(integer) 11</span><br><span class="line"></span><br><span class="line">redis&gt; GET greeting</span><br><span class="line">&quot;hello Redis&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 对空字符串/不存在的 key 进行 SETRANGE</span><br><span class="line"></span><br><span class="line">redis&gt; EXISTS empty_string</span><br><span class="line">(integer) 0</span><br><span class="line"></span><br><span class="line">redis&gt; SETRANGE empty_string 5 &quot;Redis!&quot;   # 对不存在的 key 使用 SETRANGE</span><br><span class="line">(integer) 11</span><br><span class="line"></span><br><span class="line">redis&gt; GET empty_string           # 空白处被&quot;\x00&quot;填充</span><br><span class="line">&quot;\x00\x00\x00\x00\x00Redis!</span><br></pre></td></tr></table></figure></li><li><p>6.setlen - 获取字符串的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">redis&gt;set n1 &apos;hello world&apos;</span><br><span class="line">OK</span><br><span class="line">redis&gt;setlen n1</span><br><span class="line">(integer)11</span><br><span class="line"></span><br><span class="line"># 不存在的key长度为0</span><br><span class="line">redis&gt;strlen n2</span><br><span class="line">(integer)0</span><br></pre></td></tr></table></figure></li><li><p>7.mset/mget 同时设置/获取多个键值对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis&gt; mset a 1 b 2 c 3</span><br><span class="line">OK</span><br><span class="line">redis&gt;mget a b c</span><br><span class="line">1)&apos;1&apos;</span><br><span class="line">2)&apos;2&apos;</span><br><span class="line">3)&apos;3&apos;</span><br><span class="line">注意：mset会覆盖旧值</span><br></pre></td></tr></table></figure></li><li><p>8 incr - key的值加一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis&gt;set num 20</span><br><span class="line">OK</span><br><span class="line">redis&gt;incr num</span><br><span class="line">(integer)21</span><br><span class="line">redis&gt;get num # 数字在redis中以字符串的形式保存</span><br><span class="line">&apos;21&apos;</span><br></pre></td></tr></table></figure></li><li><p>9 incrby 当key不存在时可以创建，key不是数字时后报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># key 存在且是数字值</span><br><span class="line"></span><br><span class="line">redis&gt; SET rank 50</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">redis&gt; INCRBY rank 20</span><br><span class="line">(integer) 70</span><br><span class="line"></span><br><span class="line">redis&gt; GET rank</span><br><span class="line">&quot;70&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># key 不存在时</span><br><span class="line"></span><br><span class="line">redis&gt; EXISTS counter</span><br><span class="line">(integer) 0</span><br><span class="line"></span><br><span class="line">redis&gt; INCRBY counter 30</span><br><span class="line">(integer) 30</span><br><span class="line"></span><br><span class="line">redis&gt; GET counter</span><br><span class="line">&quot;30&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># key 不是数字值时</span><br><span class="line"></span><br><span class="line">redis&gt; SET book &quot;long long ago...&quot;</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">redis&gt; INCRBY book 200</span><br><span class="line">(error) ERR value is not an integer or out of range</span><br></pre></td></tr></table></figure></li><li><p>10 decr/ decrby 用法和和上面相同，不同的是 key - 1</p></li><li>11 append - 如果 key 已经存在并且是一个字符串， append 命令将 value 追加到 key 原来的值的末尾;如果 key 不存在， append 就简单地将给定 key 设为 value ，就像执行 set key value 一样。</li></ul><p>Redis的list类型 - 经典数据存储结构：<br>栈（stack）- FILO - 先进后出<br> lpush + lpop / rpush + rpop<br>队列（queue） - FILO - 先进先出<br>lpush + rpop / rpush + lpop</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;1.set - 创建键值对 例：set abc 123&lt;/li&gt;
&lt;li&gt;2.get - 获取键值对    get abc&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.setbit -   bit默认初始化为0&lt;/p&gt;
&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="NoSQL" scheme="http://yoursite.com/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基本使用(一)</title>
    <link href="http://yoursite.com/2018/12/27/MySQL%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8(%E4%B8%80)/"/>
    <id>http://yoursite.com/2018/12/27/MySQL基本使用(一)/</id>
    <published>2018-12-27T09:50:49.990Z</published>
    <updated>2018-12-27T09:50:49.990Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MySQL建库和建表"><a href="#MySQL建库和建表" class="headerlink" title="MySQL建库和建表"></a>MySQL建库和建表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果存在名为SRS的数据库就删除它（慎重！！！)</span></span><br><span class="line">  <span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> SRS;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建名为SRS的数据库并设置默认字符集为utf8（如果不设定，出现中文会乱码）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> SRS <span class="keyword">default</span> <span class="keyword">charset</span> utf8 <span class="keyword">collate</span> utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 切换到SRS数据库</span></span><br><span class="line"><span class="keyword">use</span> SRS;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建学院表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_college</span><br><span class="line">(</span><br><span class="line">collid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment <span class="keyword">comment</span> <span class="string">'学院编号'</span>,</span><br><span class="line">collname <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'学院名称'</span>,</span><br><span class="line">collmaster <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'院长姓名'</span>,</span><br><span class="line">collweb <span class="built_in">varchar</span>(<span class="number">511</span>) <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'学院网站'</span>,</span><br><span class="line">primary <span class="keyword">key</span> (collid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_college <span class="keyword">add</span> <span class="keyword">constraint</span> uni_college_collname <span class="keyword">unique</span> (collname);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_student</span><br><span class="line">(</span><br><span class="line">stuid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'学号'</span>,</span><br><span class="line">sname <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'学生姓名'</span>,</span><br><span class="line">gender <span class="built_in">bit</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'性别'</span>,</span><br><span class="line">birth <span class="built_in">date</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'出生日期'</span>,</span><br><span class="line">addr <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'籍贯'</span>,</span><br><span class="line">collid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'所属学院编号'</span>,</span><br><span class="line">primary <span class="keyword">key</span> (stuid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_collid <span class="keyword">foreign</span> <span class="keyword">key</span> (collid) <span class="keyword">references</span> tb_college (collid);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建教师表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_teacher</span><br><span class="line">(</span><br><span class="line">teaid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'教师工号'</span>,</span><br><span class="line">tname <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'教师姓名'</span>,</span><br><span class="line">title <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'职称'</span>,</span><br><span class="line">collid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'所属学院编号'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_teacher <span class="keyword">add</span> <span class="keyword">constraint</span> pk_teacher primary <span class="keyword">key</span> (teaid);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_teacher <span class="keyword">add</span> <span class="keyword">constraint</span> fk_teacher_collid <span class="keyword">foreign</span> <span class="keyword">key</span> (collid) <span class="keyword">references</span> tb_college (collid);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建课程表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_course</span><br><span class="line">(</span><br><span class="line">couid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'课程编号'</span>,</span><br><span class="line">cname <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'课程名称'</span>,</span><br><span class="line">credit tinyint <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'学分'</span>,</span><br><span class="line">teaid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'教师工号'</span>,</span><br><span class="line">primary <span class="keyword">key</span> (couid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_course <span class="keyword">add</span> <span class="keyword">constraint</span> fk_course_tid <span class="keyword">foreign</span> <span class="keyword">key</span> (teaid) <span class="keyword">references</span> tb_teacher (teaid);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建学生选课表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_score</span><br><span class="line">(</span><br><span class="line">scid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment <span class="keyword">comment</span> <span class="string">'选课编号'</span>,</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'学号'</span>,</span><br><span class="line">cid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'课程编号'</span>,</span><br><span class="line">seldate <span class="built_in">date</span> <span class="keyword">comment</span> <span class="string">'选课时间日期'</span>,</span><br><span class="line">mark <span class="built_in">decimal</span>(<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">comment</span> <span class="string">'考试成绩'</span>,</span><br><span class="line">primary <span class="keyword">key</span> (scid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加外键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_score <span class="keyword">add</span> <span class="keyword">constraint</span> fk_score_sid <span class="keyword">foreign</span> <span class="keyword">key</span> (<span class="keyword">sid</span>) <span class="keyword">references</span> tb_student (stuid);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_score <span class="keyword">add</span> <span class="keyword">constraint</span> fk_score_cid <span class="keyword">foreign</span> <span class="keyword">key</span> (cid) <span class="keyword">references</span> tb_course (couid);</span><br><span class="line"><span class="comment">-- 添加唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tb_score <span class="keyword">add</span> <span class="keyword">constraint</span> uni_score_sid_cid <span class="keyword">unique</span> (<span class="keyword">sid</span>, cid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入学院数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_college (collname, collmaster, collweb) <span class="keyword">values</span> </span><br><span class="line">(<span class="string">'计算机学院'</span>, <span class="string">'左冷禅'</span>, <span class="string">'http://www.abc.com'</span>),</span><br><span class="line">(<span class="string">'外国语学院'</span>, <span class="string">'岳不群'</span>, <span class="string">'http://www.xyz.com'</span>),</span><br><span class="line">(<span class="string">'经济管理学院'</span>, <span class="string">'风清扬'</span>, <span class="string">'http://www.foo.com'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入学生数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_student (stuid, sname, gender, birth, addr, collid) <span class="keyword">values</span></span><br><span class="line">(<span class="number">1001</span>, <span class="string">'杨逍'</span>, <span class="number">1</span>, <span class="string">'1990-3-4'</span>, <span class="string">'四川成都'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1002</span>, <span class="string">'任我行'</span>, <span class="number">1</span>, <span class="string">'1992-2-2'</span>, <span class="string">'湖南长沙'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1033</span>, <span class="string">'王语嫣'</span>, <span class="number">0</span>, <span class="string">'1989-12-3'</span>, <span class="string">'四川成都'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1572</span>, <span class="string">'岳不群'</span>, <span class="number">1</span>, <span class="string">'1993-7-19'</span>, <span class="string">'陕西咸阳'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1378</span>, <span class="string">'纪嫣然'</span>, <span class="number">0</span>, <span class="string">'1995-8-12'</span>, <span class="string">'四川绵阳'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1954</span>, <span class="string">'林平之'</span>, <span class="number">1</span>, <span class="string">'1994-9-20'</span>, <span class="string">'福建莆田'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">2035</span>, <span class="string">'东方不败'</span>, <span class="number">1</span>, <span class="string">'1988-6-30'</span>, <span class="literal">null</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="number">3011</span>, <span class="string">'林震南'</span>, <span class="number">1</span>, <span class="string">'1985-12-12'</span>, <span class="string">'福建莆田'</span>, <span class="number">3</span>),</span><br><span class="line">(<span class="number">3755</span>, <span class="string">'项少龙'</span>, <span class="number">1</span>, <span class="string">'1993-1-25'</span>, <span class="literal">null</span>, <span class="number">3</span>),</span><br><span class="line">(<span class="number">3923</span>, <span class="string">'杨不悔'</span>, <span class="number">0</span>, <span class="string">'1985-4-17'</span>, <span class="string">'四川成都'</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入老师数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_teacher (teaid, tname, title, collid) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">1122</span>, <span class="string">'张三丰'</span>, <span class="string">'教授'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1133</span>, <span class="string">'宋远桥'</span>, <span class="string">'副教授'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">1144</span>, <span class="string">'杨逍'</span>, <span class="string">'副教授'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">2255</span>, <span class="string">'范遥'</span>, <span class="string">'副教授'</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="number">3366</span>, <span class="string">'韦一笑'</span>, <span class="string">'讲师'</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入课程数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_course (couid, cname, credit, teaid) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">1111</span>, <span class="string">'Python程序设计'</span>, <span class="number">3</span>, <span class="number">1122</span>),</span><br><span class="line">(<span class="number">2222</span>, <span class="string">'Web前端开发'</span>, <span class="number">2</span>, <span class="number">1122</span>),</span><br><span class="line">(<span class="number">3333</span>, <span class="string">'操作系统'</span>, <span class="number">4</span>, <span class="number">1122</span>),</span><br><span class="line">(<span class="number">4444</span>, <span class="string">'计算机网络'</span>, <span class="number">2</span>, <span class="number">1133</span>),</span><br><span class="line">(<span class="number">5555</span>, <span class="string">'编译原理'</span>, <span class="number">4</span>, <span class="number">1144</span>),</span><br><span class="line">(<span class="number">6666</span>, <span class="string">'算法和数据结构'</span>, <span class="number">3</span>, <span class="number">1144</span>),</span><br><span class="line">(<span class="number">7777</span>, <span class="string">'经贸法语'</span>, <span class="number">3</span>, <span class="number">2255</span>),</span><br><span class="line">(<span class="number">8888</span>, <span class="string">'成本会计'</span>, <span class="number">2</span>, <span class="number">3366</span>),</span><br><span class="line">(<span class="number">9999</span>, <span class="string">'审计学'</span>, <span class="number">3</span>, <span class="number">3366</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入选课数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_score (<span class="keyword">sid</span>, cid, seldate, mark) <span class="keyword">values</span> </span><br><span class="line">(<span class="number">1001</span>, <span class="number">1111</span>, <span class="string">'2017-09-01'</span>, <span class="number">95</span>),</span><br><span class="line">(<span class="number">1001</span>, <span class="number">2222</span>, <span class="string">'2017-09-01'</span>, <span class="number">87.5</span>),</span><br><span class="line">(<span class="number">1001</span>, <span class="number">3333</span>, <span class="string">'2017-09-01'</span>, <span class="number">100</span>),</span><br><span class="line">(<span class="number">1001</span>, <span class="number">4444</span>, <span class="string">'2018-09-03'</span>, <span class="literal">null</span>),</span><br><span class="line">(<span class="number">1001</span>, <span class="number">6666</span>, <span class="string">'2017-09-02'</span>, <span class="number">100</span>),</span><br><span class="line">(<span class="number">1002</span>, <span class="number">1111</span>, <span class="string">'2017-09-03'</span>, <span class="number">65</span>),</span><br><span class="line">(<span class="number">1002</span>, <span class="number">5555</span>, <span class="string">'2017-09-01'</span>, <span class="number">42</span>),</span><br><span class="line">(<span class="number">1033</span>, <span class="number">1111</span>, <span class="string">'2017-09-03'</span>, <span class="number">92.5</span>),</span><br><span class="line">(<span class="number">1033</span>, <span class="number">4444</span>, <span class="string">'2017-09-01'</span>, <span class="number">78</span>),</span><br><span class="line">(<span class="number">1033</span>, <span class="number">5555</span>, <span class="string">'2017-09-01'</span>, <span class="number">82.5</span>),</span><br><span class="line">(<span class="number">1572</span>, <span class="number">1111</span>, <span class="string">'2017-09-02'</span>, <span class="number">78</span>),</span><br><span class="line">(<span class="number">1378</span>, <span class="number">1111</span>, <span class="string">'2017-09-05'</span>, <span class="number">82</span>),</span><br><span class="line">(<span class="number">1378</span>, <span class="number">7777</span>, <span class="string">'2017-09-02'</span>, <span class="number">65.5</span>),</span><br><span class="line">(<span class="number">2035</span>, <span class="number">7777</span>, <span class="string">'2018-09-03'</span>, <span class="number">88</span>),</span><br><span class="line">(<span class="number">2035</span>, <span class="number">9999</span>, <span class="built_in">date</span>(<span class="keyword">now</span>()), <span class="literal">null</span>),</span><br><span class="line">(<span class="number">3755</span>, <span class="number">1111</span>, <span class="built_in">date</span>(<span class="keyword">now</span>()), <span class="literal">null</span>),</span><br><span class="line">(<span class="number">3755</span>, <span class="number">8888</span>, <span class="built_in">date</span>(<span class="keyword">now</span>()), <span class="literal">null</span>),</span><br><span class="line">(<span class="number">3755</span>, <span class="number">9999</span>, <span class="string">'2017-09-01'</span>, <span class="number">92</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有学生信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb_student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有课程名称及学分(投影和别名)</span></span><br><span class="line"><span class="keyword">select</span> cname <span class="keyword">as</span> 课程名称, credit <span class="keyword">as</span> 学分 <span class="keyword">from</span> tb_course;</span><br><span class="line"><span class="comment">-- as 可以省略 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有女学生的姓名和出生日期(筛选)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名, birth 出生日期 <span class="keyword">from</span> tb_student <span class="keyword">where</span> gender=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询所有80后学生的姓名、性别和出生日期(筛选)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名, </span><br><span class="line"><span class="keyword">case</span> gender <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">'男'</span> <span class="keyword">else</span> <span class="string">'女'</span> <span class="keyword">end</span> 性别, </span><br><span class="line">birth 出生日期 <span class="keyword">from</span> tb_student </span><br><span class="line"><span class="keyword">where</span> birth <span class="keyword">between</span> <span class="string">'1980-1-1'</span> <span class="keyword">and</span> <span class="string">'1989-12-31'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 写法二 使用函数</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">  sname 姓名, </span><br><span class="line">  <span class="keyword">if</span> (gender, <span class="string">'男'</span>,<span class="string">'女'</span>) 性别, </span><br><span class="line">  birth 出生日期 <span class="keyword">from</span> tb_student </span><br><span class="line"><span class="keyword">where</span> birth <span class="keyword">between</span> <span class="string">'1980-1-1'</span> <span class="keyword">and</span> <span class="string">'1989-12-31'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询名字有4个中文字符的学生学号和姓名（函数）</span></span><br><span class="line"><span class="comment">-- utf-8 一个字符=三个字节</span></span><br><span class="line"><span class="keyword">select</span> stuid <span class="keyword">as</span> 学号,sname <span class="keyword">as</span> 姓名 <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">length</span>(sname)/<span class="number">3</span>=<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓”杨“的学生姓名和性别(模糊)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名,<span class="keyword">if</span> (gender,<span class="string">'男'</span>,<span class="string">'女'</span>) <span class="keyword">as</span> 性别</span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'杨%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓”杨“名字两个字的学生姓名和性别(模糊)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名,<span class="keyword">if</span> (gender,<span class="string">'男'</span>,<span class="string">'女'</span>) <span class="keyword">as</span> 性别</span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'杨_'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓”杨“名字三个字的学生姓名和性别(模糊)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名,<span class="keyword">if</span> (gender,<span class="string">'男'</span>,<span class="string">'女'</span>) <span class="keyword">as</span> 性别</span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'杨__'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询名字中有”不“字或“嫣”字的学生的姓名(模糊)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名,<span class="keyword">if</span> (gender,<span class="string">'男'</span>,<span class="string">'女'</span>) <span class="keyword">as</span> 性别</span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'%不%'</span> <span class="keyword">or</span> sname <span class="keyword">like</span><span class="string">'%嫣%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询没有录入家庭住址的学生姓名(空值)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名 </span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">where</span> addr <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">or</span> addr = <span class="string">''</span>;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询录入了家庭住址的学生姓名(空值)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名 <span class="keyword">from</span> tb_student </span><br><span class="line"><span class="keyword">where</span> addr <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> addr &lt;&gt; <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生选课的所有日期(去重)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> seldate <span class="keyword">from</span> tb_score;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生的家庭住址(去重)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> addr <span class="keyword">from</span> tb_student </span><br><span class="line"><span class="keyword">where</span> addr <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> addr &lt;&gt; <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询男学生的姓名和生日按年龄从大到小排列(排序)</span></span><br><span class="line"><span class="comment">-- asc (默认) 升序 / desc 降序</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名,birth 出生日期 <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">where</span> gender = <span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> birth <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname 姓名,<span class="keyword">year</span>(<span class="keyword">now</span>())-<span class="keyword">year</span>(birth) <span class="keyword">as</span> 年龄 <span class="keyword">from</span> tb_student </span><br><span class="line"><span class="keyword">where</span> gender=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> 年龄 <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> stuid 学号,sname 姓名,gender 出生日期 <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> gender <span class="keyword">asc</span>, stuid <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 聚合函数： max/ min / sum /avg / count</span></span><br><span class="line"><span class="comment">-- 查询年龄最大的学生的出生日期(聚合函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">min</span>(birth) <span class="keyword">from</span> tb_student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄最小的学生的出生日期(聚合函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(birth) <span class="keyword">from</span> tb_student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询男女学生的人数(分组和聚合函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">if</span>(gender,<span class="string">'男'</span>,<span class="string">'女'</span>) 性别, <span class="keyword">count</span>(gender) 人数 <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> gender;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询课程编号为1111的课程的平均成绩(筛选和聚合函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(mark)<span class="keyword">as</span> 平均成绩 <span class="keyword">from</span> tb_score <span class="keyword">where</span> cid = <span class="number">1111</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学号为1001的学生所有课程的平均分(筛选和聚合函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(mark) 平均成绩 <span class="keyword">from</span> tb_score <span class="keyword">where</span> <span class="keyword">sid</span> = <span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询每个学生的学号和平均成绩(分组和聚合函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span> 学号, <span class="keyword">avg</span>(mark) 平均分 <span class="keyword">from</span> tb_score</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询平均成绩大于等于90分的学生的学号和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span> 学号, <span class="keyword">avg</span>(mark) 平均分 <span class="keyword">from</span> tb_score</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> 平均分&gt;=<span class="number">90</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询平均成绩大于等于90分的学生且学号为1开头学号的 学号和平均成绩</span></span><br><span class="line"><span class="comment">-- where 用于分组之前的筛选， 分组之后用 having</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span> 学号, <span class="keyword">avg</span>(mark) 平均分 <span class="keyword">from</span> tb_score</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">1999</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> 平均分&gt;=<span class="number">90</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均分 <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄最大的学生的姓名(子查询)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名 <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">where</span> birth=(<span class="keyword">select</span> <span class="keyword">min</span>(birth) <span class="keyword">from</span> tb_student);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄最大的学生姓名和年龄(子查询+运算)</span></span><br><span class="line"><span class="comment">-- 把一个查询的结果当成另一个查询的一部分来使用</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名,  <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">where</span> birth=(<span class="keyword">select</span> <span class="keyword">min</span>(birth) <span class="keyword">from</span> tb_student);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询选了两门以上的课程的学生姓名(子查询/分组条件/集合运算)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名 <span class="keyword">from</span> tb_student</span><br><span class="line"><span class="keyword">where</span> stuid <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> tb_score <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">count</span>(<span class="keyword">sid</span>)&gt;<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生姓名、课程名称以及成绩(连接查询)</span></span><br><span class="line"><span class="keyword">select</span> sname , cname, mark</span><br><span class="line"><span class="keyword">from</span> tb_student, tb_course, tb_score</span><br><span class="line"><span class="keyword">where</span> stuid=<span class="keyword">sid</span> <span class="keyword">and</span> couid=cid <span class="keyword">limit</span> <span class="number">5</span> <span class="keyword">offset</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 分页查询</span></span><br><span class="line"><span class="keyword">select</span> sname 学生姓名, cname 课程名称, mark 考试成绩</span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">inner</span> <span class="keyword">join</span> tb_score <span class="keyword">on</span> stuid=<span class="keyword">sid</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> tb_course <span class="keyword">on</span> couid=cid <span class="keyword">limit</span> <span class="number">5</span> <span class="keyword">offset</span> <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname 学生姓名, cname 课程名称, mark 考试成绩</span><br><span class="line"><span class="keyword">from</span> tb_student <span class="keyword">inner</span> <span class="keyword">join</span> tb_score <span class="keyword">on</span> stuid=<span class="keyword">sid</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> tb_course <span class="keyword">on</span> couid=cid <span class="keyword">limit</span> <span class="number">15</span>,<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询选课学生的姓名和平均成绩(子查询和连接查询)</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名, avgmark 平均分</span><br><span class="line"><span class="keyword">from</span> tb_student t1,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>, <span class="keyword">avg</span>(mark) <span class="keyword">as</span> avgmark</span><br><span class="line"><span class="keyword">from</span> tb_score <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t2</span><br><span class="line"><span class="keyword">where</span> stuid=<span class="keyword">sid</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法二 内连接</span></span><br><span class="line"><span class="keyword">select</span> sname 姓名, avgmark 平均分</span><br><span class="line"><span class="keyword">from</span> tb_student t1 <span class="keyword">inner</span> <span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>, <span class="keyword">avg</span>(mark) <span class="keyword">as</span> avgmark</span><br><span class="line"><span class="keyword">from</span> tb_score <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t2</span><br><span class="line"><span class="keyword">on</span> stuid=<span class="keyword">sid</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询每个学生的姓名和选课数量(左外连接和子查询)</span></span><br><span class="line"><span class="comment">-- 内连接只能将满足连表条件的连表记录查出来</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 左外连接：将左表不满足连表条件的记录查出来 不满足连表条件的地方补null</span></span><br><span class="line"><span class="comment">-- 右外连接：将右表不满足连表条件的记录查出来 不满足连表条件的地方补null</span></span><br><span class="line"><span class="comment">-- 在连接多表查询时写在前面的表称为左表，写在后面的表称为右表</span></span><br><span class="line"><span class="comment">-- left outer join / right outer join  -- outer可以省略</span></span><br><span class="line"><span class="comment">-- MySQL不支持全外连接 full outer join</span></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">as</span> 姓名, <span class="keyword">ifnull</span>(total, <span class="number">0</span>) <span class="keyword">as</span> 选课数量</span><br><span class="line"><span class="keyword">from</span> tb_student t1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> (<span class="keyword">select</span> <span class="keyword">sid</span>, <span class="keyword">count</span>(<span class="keyword">sid</span>) <span class="keyword">as</span> total</span><br><span class="line"><span class="keyword">from</span> tb_score <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>)t2</span><br><span class="line"><span class="keyword">on</span> stuid=<span class="keyword">sid</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;MySQL建库和建表&quot;&gt;&lt;a href=&quot;#MySQL建库和建表&quot; class=&quot;headerlink&quot; title=&quot;MySQL建库和建表&quot;&gt;&lt;/a&gt;MySQL建库和建表&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis基础（一）</title>
    <link href="http://yoursite.com/2018/12/27/Redis%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/12/27/Redis基础（一）/</id>
    <published>2018-12-27T09:32:49.505Z</published>
    <updated>2018-12-27T09:32:49.506Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-5.0.3.tar.gz</span><br><span class="line"></span><br><span class="line">解包</span><br><span class="line">gunzip redis-5.0.3.tar.gz</span><br><span class="line">tar -xvf redis-5.0.3.tar</span><br><span class="line"></span><br><span class="line">cd redis-5.0.3</span><br><span class="line">编译</span><br><span class="line">gcc --version</span><br><span class="line">安装</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p><strong>提供高速缓存服务 - 缓存热点数据（访问量大数据不大）</strong><br><strong>缓解了数据的压力（高频访问数据不用直接访问数据库）</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">启动：</span><br><span class="line">redis-server --requirepass 123456 --appendonly yes &gt; redis.log 2&gt; redis-error.log &amp;</span><br><span class="line"></span><br><span class="line">连接自己的redis</span><br><span class="line">redis -cli -h ip -p 端口</span><br><span class="line">密码：auth 123456</span><br><span class="line">auth - 验证身份</span><br><span class="line">ping - 心跳时间</span><br><span class="line"></span><br><span class="line">set  - 设置键值对</span><br><span class="line">git  - 取值</span><br><span class="line"></span><br><span class="line">expire - 设置超时时间</span><br><span class="line">ttl 内容 - 查看剩余存活时间  -1 永久  -2 超时  - 正整数 剩余时间</span><br><span class="line">keys * 查看所有键</span><br><span class="line"></span><br><span class="line">flushdb  - 清空数据库中所有键值对</span><br><span class="line">flushall - 清除所有数据库中的所有键值对</span><br><span class="line"></span><br><span class="line">existis 判断是否存在</span><br><span class="line">select 序号（默认有16库） 切换数据库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">save / bgsave - 保存数据 / 后台保存数据</span><br><span class="line">shutdown - 关闭服务器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Redis提供两种持久化数据的方案：</span><br><span class="line">1. RDB - 默认开启</span><br><span class="line">2. AOF - 默认关闭 -- appendonly yes</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装Redis&quot;&gt;&lt;a href=&quot;#安装Redis&quot; class=&quot;headerlink&quot; title=&quot;安装Redis&quot;&gt;&lt;/a&gt;安装Redis&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="NoSQL" scheme="http://yoursite.com/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL安装(Linux系统)</title>
    <link href="http://yoursite.com/2018/12/27/MySQL%E5%AE%89%E8%A3%85(Linux%E7%B3%BB%E7%BB%9F)/"/>
    <id>http://yoursite.com/2018/12/27/MySQL安装(Linux系统)/</id>
    <published>2018-12-27T03:14:56.192Z</published>
    <updated>2018-12-27T03:14:56.192Z</updated>
    
    <content type="html"><![CDATA[<h4 id="数据库简介"><a href="#数据库简介" class="headerlink" title="数据库简介"></a>数据库简介</h4><p>数据库 - 实现项目中的数据持久化<br>数据库类别：</p><ul><li><p>关系型数据产品</p><ul><li>Oracle - 甲骨文</li><li>MySQL - 甲骨文 - MariaDB</li><li>DB2、SQLServer、PostgreSQL、SQLite</li></ul></li><li><p>非关系型数据库</p></li><li>NoSQL数据库 - Redis<ul><li>MongoDB - 文档数据库 - 适应量大但是价值低的数据</li><li>Rdeis - KV数据库 - 性能好适合做高速缓存服务</li><li>ElasticSearch - 搜索引擎</li></ul></li><li>MySQL<br> 特点：<ul><li>理论基础 ：集合论和关系代数</li><li>用二维表来组织数据（行（记录）和列（字段））</li><li>能够唯一标识一条记录的列称为主键（primary key）</li><li>SQL - 结构化查询语言<blockquote><p>DDL - 数据定义语言 - create / drop / alter<br>DML - 数据操作语言 - insert / delete / update / select<br>DCL - 数据控制语言 - grant / revoke / commit / rollback</p></blockquote><h4 id="MySQL服务端安装"><a href="#MySQL服务端安装" class="headerlink" title="MySQL服务端安装"></a>MySQL服务端安装</h4></li></ul></li><li>Linux安装软件</li></ul><ol><li>包管理工具 - yum / rpm</li></ol><p>Docker - 提供虚拟化服务，创建虚拟化容器并安装软件<br>yum -y install docker-io<br>yum -y remove docker-io<br>yum info …<br>yum search …<br>yum list installed | grep docker</p><p>启动Docker服务<br>systemctl start docker<br>systemctl stop docker<br>systemctl restart docker<br>systemctl status docker<br>systemctl enable docker<br>systemctl disable docker</p><ul><li>使用Docker的命令</li></ul><ol><li><p>查看已经下载的镜像文件（安装包）：<br>docker images</p></li><li><p>下载MySQL的镜像文件：<br>docker pull mysql:5.7</p></li></ol><p>MySQL数据库超级管理员账号 - root</p><ol start="3"><li><p>创建并运行容器：<br>docker run -d -p 3306:3306 –name mysql57 -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7</p></li><li><p>查看运行中的容器：<br>docker ps</p></li><li><p>查看所有的容器：<br>docker container ls -a</p></li><li><p>停止容器<br>docker stop mysql57</p></li><li><p>启动容器<br>docker start mysql57</p></li><li><p>删除容器<br>docker rm -f mysql57</p></li></ol><h4 id="安装MySQL客户端工具："><a href="#安装MySQL客户端工具：" class="headerlink" title="安装MySQL客户端工具："></a>安装MySQL客户端工具：</h4><p>Navicat for MySQL - 猫<br>SQLyog - 海豚<br>Toad for MySQL - 蛤蟆</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;数据库简介&quot;&gt;&lt;a href=&quot;#数据库简介&quot; class=&quot;headerlink&quot; title=&quot;数据库简介&quot;&gt;&lt;/a&gt;数据库简介&lt;/h4&gt;&lt;p&gt;数据库 - 实现项目中的数据持久化&lt;br&gt;数据库类别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;关系型数据产品&lt;/p&gt;
&lt;u
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yoursite.com/2018/12/26/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/12/26/正则表达式/</id>
    <published>2018-12-26T15:11:16.105Z</published>
    <updated>2018-12-26T15:11:16.106Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、正则基本符号"><a href="#一、正则基本符号" class="headerlink" title="一、正则基本符号"></a>一、正则基本符号</h4><ul><li><p>1.什么是正则表达式<br>正则表达式就是字符匹配的工具;是由正则符号和普通字符组成，来匹配不同规律的字符串</p></li><li><p>2.Python对正则表达式的支持<br>python中提供了一个re模块，用来支持正则表达式</p></li><li><p>fullmatch(正则表达式, 字符串) - 用正则表达式去完全匹配字符串，如果匹配成功返回匹配结果，失败返回None<br>python中的正则表达式的写法：将正则内容写在字符串中，一般这个字符串的最前面会r/R</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1  普通字符</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">普通字符在正则表达式中，代表字符本身</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个字符串，第一个字符是'a',第二个字符是'b',第三个字符也是最后一个字符是'c'</span></span><br><span class="line">re_str = <span class="string">r'abc'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'abc'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 .(匹配任意字符)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">在正则表达式中，.出现的位置，可以匹配一个任意字符</span></span><br><span class="line"><span class="string">注意：一个.只能匹配一个字符</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个长度上3的字符串，并且第一个字符是'a',最后一个字符是'c',中间是任意字符</span></span><br><span class="line">re_str = <span class="string">r'a.c'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'a#c'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3 \w(匹配字母数字或者下划线)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">在正则表达式中，\w出现的位置，可以匹配一个任意的字母、数字或者下划线(其实也可以匹配Unicode编码中除了ASCII码剩下的部分)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意：</span></span><br><span class="line"><span class="string">一个\w只能匹配一个字符</span></span><br><span class="line"><span class="string">中文也能匹配</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个长度是5的字符串，并且字符串的前两位是数字、字母和下划线，后面是三个任意字符</span></span><br><span class="line">re_str = <span class="string">r'\w\w...'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'_好kll'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4 \s(匹配空白字符)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">空白字符包括：空格、制表符和换行符(空格,\t,\r,\n)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个长度是4的字符串，并且字符串前两位是字母数字或者下划线(中文),中间一个空白，再一个字母数字或者下划线(中文)</span></span><br><span class="line">re_str = <span class="string">r'\w\w\s\w'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'hj\t8'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 \d(匹配数字字符)</span></span><br><span class="line"><span class="comment"># 匹配一个长度是5的字符串，字符串的前三位是数字字符，后两位是任意字符</span></span><br><span class="line">re_str = <span class="string">'\d\d\d..'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'082de'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6 \b(检测单词边界)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">注意：检测\b出现的位置是否是单词边界，不会对字符进行匹配。</span></span><br><span class="line"><span class="string">     当正则表达式中出现了\b，匹配的时候去掉\b，匹配成功后再看\b出现的位置是否是单词边界</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">单词边界：字符串开头、字符串结尾、标点符号、空白符号等（只要能够将单词区分开的符号都属于单词边界）</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配字符串'hello,world', 并且要求w前面是单词边界, h前面也是单词边界</span></span><br><span class="line">re_str = <span class="string">r'\bhello,\bworld'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'hello,world'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'abc'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'a#c'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">5</span>), match=<span class="string">'_好kll'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">4</span>), match=<span class="string">'hj\t8'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">5</span>), match=<span class="string">'082de'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">11</span>), match=<span class="string">'hello,world'</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>7 ^(检测字符串开头)<br>在match和fullmatch中没有意义, search、findall等中有意义</p></li><li><p>8 $(检测字符串结尾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配一个字符串，只有三位，分别是'The',并且e后面是字符串结尾</span></span><br><span class="line">re_str = <span class="string">r'The'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'The'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure></li><li><p>9 \大写字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">'\大写字母'对应的功能是'\小写字母'功能取反</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">\W - 匹配非数字字母下划线</span></span><br><span class="line"><span class="string">\D - 匹配非数字字符</span></span><br><span class="line"><span class="string">\S - 匹配非空白字符</span></span><br><span class="line"><span class="string">\B - 检测非单词边界</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个字符串，第一个字符是数字、第二个是非数字,第三个是空白，第四个是数字字母下划线，最后一个是a;</span></span><br><span class="line"><span class="comment"># 并且要求a前面不是单词边界</span></span><br><span class="line">re_str = <span class="string">r'\d\D\s\w\Ba'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'9H\t_a'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure></li><li><p>10 <a href="匹配中括号出现的任意一个字符">字符集</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">1.[普通字符集] - 匹配中括号出现的任意一个字符</span></span><br><span class="line"><span class="string">例如：[abc] - 匹配一个字符是a或者b或者c</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意：a.一个中括号只能匹配一个字符</span></span><br><span class="line"><span class="string">     b.正则中有特殊功能的单个符号在[]都表示符号本身 例如：.  $  ^ + * ？ |等</span></span><br><span class="line"><span class="string">     c.匹配字符的组合符号，在中括号中保持原来的功能, 例如: \w  \d \s  \W  \D \S</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个长度是2的字符串，第一个字符是数字，第二个字符是b或者c或者=或者数字</span></span><br><span class="line">re_str = <span class="string">r'\d[bc=\d]'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'24'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">2.[字符1-字符2] - 表示字符1到字符2（注意：要求字符1的编码值要小于字符2）</span></span><br><span class="line"><span class="string">[a-z]  - 表示匹配所有小写字母</span></span><br><span class="line"><span class="string">[A-Z]  - 表示匹配所有大写字母</span></span><br><span class="line"><span class="string">[a-zA-Z] - 匹配所有的字母</span></span><br><span class="line"><span class="string">[1-7] - 匹配数字字符1到7</span></span><br><span class="line"><span class="string">[\u4e00-\u9fa5] - 匹配所有的中文</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[字符1字符2-] - 这儿的-表示减号本身</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 匹配一个长度是3的字符串,第一个字符是数字字符1到7中的一个，</span></span><br><span class="line"><span class="comment"># 第二个字符是'a'，'b','c','-'中的一个,第三个字符是小写字母</span></span><br><span class="line">re_str = <span class="string">r'[1-7][abc-][a-z]'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'6-z'</span>)</span><br><span class="line">print(result)</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'6-z'</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>11 [^字符集] - 匹配不在字符集中的任意一个字符</p><blockquote><p>[^abc] - 匹配除了’a’,’b’,’c’以外的其他任意一个字符<br>[^\d] - 匹配除了数字字符以外的其他任意一个字符<br>[^a-z] - 匹配除了小写字母以外的其他任意一个字符 </p></blockquote></li></ul><p>[abc^] - 匹配’a’,’b’,’c’或者’^’中的任意一个字符<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">re_str = <span class="string">r'[^a-z]'</span></span><br><span class="line">result = re.fullmatch(re_str, <span class="string">'是'</span>)</span><br><span class="line">print(result)</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">1</span>), match=<span class="string">'是'</span>&gt;</span><br></pre></td></tr></table></figure></p><h4 id="二、正则控制匹配次数"><a href="#二、正则控制匹配次数" class="headerlink" title="二、正则控制匹配次数"></a>二、正则控制匹配次数</h4><ul><li><p>1 *(匹配0次或者多次)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a* - a出现<span class="number">0</span>次或者多次, <span class="string">''</span>,<span class="string">'a'</span>,<span class="string">'aa'</span>, <span class="string">'aaa'</span>...都可以匹配</span><br><span class="line">\d* - 任意数字出现<span class="number">0</span>次或者多次， <span class="string">''</span>,<span class="string">'1'</span>,<span class="string">'12'</span>, <span class="string">'3772'</span>...都可以匹配</span><br><span class="line">[abc]* - a，b或者c出现<span class="number">0</span>次或者多次</span><br><span class="line">[A-F]* - A到F中任意字符出现<span class="number">0</span>次或者多次</span><br><span class="line"></span><br><span class="line">注意：在[]外面的*的前面需要一个字符或者一个匹配字符的符号</span><br><span class="line">print(re.fullmatch(<span class="string">r'a*b'</span>, <span class="string">'aaaaaaaaaab'</span>))</span><br><span class="line">print(re.fullmatch(<span class="string">r'[abc]*'</span>, <span class="string">'aabc'</span>))</span><br><span class="line">print(re.fullmatch(<span class="string">r"[afadsaf]*"</span>,<span class="string">""</span>))</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">11</span>), match=<span class="string">'aaaaaaaaaab'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">4</span>), match=<span class="string">'aabc'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">0</span>), match=<span class="string">''</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>2 </p></li><li><p>+(匹配1次或者多次)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">a+ - a至少出现一次</span></span><br><span class="line"><span class="string">\d+ - 数字至少出现一次</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(re.fullmatch(<span class="string">r'a+b'</span>, <span class="string">'ab'</span>))</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">2</span>), match=<span class="string">'ab'</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>?(匹配0次或者1次)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">a? - a出现0次或者1次, '', 'a'可以匹配</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 写一个正则表达式匹配一个整数（正整数和负整数都可以），例如：123， 10， +100， -1234，</span></span><br><span class="line">re_str = <span class="string">r'[-+]?[1-9]\d*'</span></span><br><span class="line">print(re.fullmatch(re_str, <span class="string">'-12'</span>))</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'-12'</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>{}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">&#123;N&#125; - 匹配N次,  例如： a&#123;3&#125;，匹配三个'a'</span></span><br><span class="line"><span class="string">&#123;M,N&#125; - 匹配M到N次,   例如： a&#123;3, 5&#125;，匹配三个'a' 或者4个'a'或者5个'a'</span></span><br><span class="line"><span class="string">&#123;,N&#125; - 最多匹配N次(0~N)   例如：a&#123;,3&#125;，'','a', 'aa', 'aaa' </span></span><br><span class="line"><span class="string">&#123;M,&#125; - 至少匹配M次   例如：a&#123;3,&#125; , 'aaa', 'aaaa', 'aaaaa'...</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(re.fullmatch(<span class="string">r'a&#123;3,&#125;'</span>, <span class="string">'aaa'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习：输入密码，要求检查密码输入是否合格(密码由字母和数字组成，数字不开头，6-12位)。给出提示</span></span><br><span class="line">password = input(<span class="string">'密码:'</span>)</span><br><span class="line">re_str = <span class="string">r'[a-zA-Z][\da-zA-Z]&#123;5,11&#125;'</span></span><br><span class="line">result = re.fullmatch(re_str, password)</span><br><span class="line"><span class="keyword">if</span> result:</span><br><span class="line">    print(<span class="string">'输入成功！'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'输入有误！'</span>)</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'aaa'</span>&gt;</span><br><span class="line">密码:<span class="number">4</span>f5s4afd46as</span><br><span class="line">输入有误！</span><br></pre></td></tr></table></figure></li></ul><p>三、分之、捕获和贪婪</p><h5 id="1-分之"><a href="#1-分之" class="headerlink" title="1.分之"></a>1.分之</h5><ul><li>条件1 | 条件2  - 匹配条件1或者条件2<br>\d{2}|[a-z] - 匹配两个数字字符或者一个小写字母<br>a\d{2}|\w{2} - 匹配一个a后面两个数字，或者两个数字字母下划线</li></ul><p>注意：正则中的分之也会出现短路，当条件1可以匹配，就不会再使用条件2进行匹配<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">print(re.fullmatch(<span class="string">r'\d&#123;2&#125;|[a-z]'</span>, <span class="string">'z'</span>))</span><br><span class="line">print(re.fullmatch(<span class="string">r'a\d&#123;2&#125;|\w&#123;2&#125;'</span>, <span class="string">'sh'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习：写一个正则表达式，匹配所有的数字,包括正的、负的，整数，小数，0</span></span><br><span class="line"><span class="comment"># 例如：100, +100, -100, 12.5, -12.5, 0, 0.23, 0.012</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">12, 12.34 : [+-]?[1-9]\d*[.]?\d*</span></span><br><span class="line"><span class="string">0.123 : [+-]?0[.]\d+</span></span><br><span class="line"><span class="string">0 : 0</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">re_str = <span class="string">r'[-+]?[1-9]\d*[.]?\d*|[+-]?0[.]\d+|0'</span></span><br><span class="line">print(re.fullmatch(re_str, <span class="string">'-0.02'</span>))</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">5</span>), match=<span class="string">'-0.02'</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="2-捕获和分组"><a href="#2-捕获和分组" class="headerlink" title="2 () - 捕获和分组"></a>2 () - 捕获和分组</h5><ul><li><p>a.分组 - 将括号中的内容作为一个整体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配一个字符串，前三位是'abc',后三位是三个数字或者三个大写字母</span></span><br><span class="line">re_str1 = <span class="string">r'abc\d&#123;3&#125;|abc[A-Z]&#123;3&#125;'</span></span><br><span class="line">re_str2 = <span class="string">r'abc(\d&#123;3&#125;|[A-Z]&#123;3&#125;)'</span></span><br><span class="line">print(re.fullmatch(re_str2, <span class="string">'abc123'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配一个字符串，以'数字小写字母'的形式出现3次</span></span><br><span class="line">re_str = <span class="string">r'(\d[a-z])&#123;3&#125;'</span></span><br><span class="line">print(re.fullmatch(re_str, <span class="string">'2s3f4h'</span>))</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">6</span>), match=<span class="string">'abc123'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">6</span>), match=<span class="string">'2s3f4h'</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>b 捕获<br>通过正则获取符合条件的子串的时候，可以在正则表达式中加括号，匹配后只获取括号里面匹配到的内容</p></li></ul><p>re.findall(正则表达式，字符串) - 在字符串中去获取符合正则表达式条件的所有的子串,返回一个列表<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">'ahsa783+sdh*92dfjhjj78jhsda67jk'</span></span><br><span class="line">print(re.findall(<span class="string">r'a(\d+)'</span>, str1))     <span class="comment"># ['783', '67']</span></span><br></pre></td></tr></table></figure></p><ul><li>c 重复匹配<br>带多个分组的正则表达式中可以分组的后面通过添加’\数字’来重复前面第几个分组中匹配到的内容</li></ul><p>说明：\数字 - 这儿的数字代表前面第几个分组; \1代表第一个分组  \2代表第二个分组</p><h5 id="3-贪婪"><a href="#3-贪婪" class="headerlink" title="3.贪婪"></a>3.贪婪</h5><ul><li>匹配次数后加?就是贪婪匹配：*?, +?, ??, {M,N}?, {M,}? 表示尽可能少的重复<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">re_str = <span class="string">'a.+?b'</span></span><br><span class="line">re_str2 = <span class="string">'a.+b'</span>  <span class="comment"># 不使用贪婪</span></span><br><span class="line">str1 = <span class="string">'xxxahdjbnnkbsssammmbkkk'</span></span><br><span class="line">print(re.findall(re_str2,str1))</span><br><span class="line">print(re.findall(re_str, str1))</span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">[<span class="string">'ahdjbnnkbsssammmb'</span>]</span><br><span class="line">[<span class="string">'ahdjb'</span>, <span class="string">'ammmb'</span>]</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-转义符号"><a href="#4-转义符号" class="headerlink" title="4.转义符号"></a>4.转义符号</h4><ul><li><p>在正则表达式中可以在有特殊意义或者特殊功能的符号前加\来取消其特殊功能<br>\w  - 代表两个字符，分别是’\’和w<br>+ - 代表+字符<br>* - 代表*字符<br>\? - 代表?字符<br>[], (), {}表示字符的时候，前面也要加\</p></li><li><p>注意：在中括号中, \必须加\表示\本身，^在最前面加\表示^本身， 在两个字符之间加\表示-本身</p><h4 id="四、re模块"><a href="#四、re模块" class="headerlink" title="四、re模块"></a>四、re模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.compile(了解)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">compile(正则表达式) - 将正则表达式转换成正则表达式对象</span></span><br><span class="line"><span class="string">转换成对象后可以通过对象调用对象方法</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">re_str = <span class="string">'\d&#123;3&#125;'</span></span><br><span class="line">re_obj = re.compile(re_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用模块中的函数</span></span><br><span class="line">print(re.fullmatch(re_str, <span class="string">'234'</span>))</span><br><span class="line"><span class="comment"># 调用对象方法</span></span><br><span class="line">print(re_obj.fullmatch(<span class="string">'234'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.match和fullmatch</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">a. fullmatch(正则表达式, 字符串) - 完全匹配，从字符串开头匹配到字符串结束</span></span><br><span class="line"><span class="string">b. match(正则表达式, 字符串) - 不完全匹配，只匹配字符串开头</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">匹配成功返回匹配对象，匹配失败返回None</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">re_str = <span class="string">r'\d([A-Z]&#123;2&#125;)'</span></span><br><span class="line">result1 = re.fullmatch(re_str, <span class="string">'2HK'</span>)</span><br><span class="line">print(result1)</span><br><span class="line"></span><br><span class="line">result2 = re.match(re_str, <span class="string">'8KLsjdddd=='</span>)</span><br><span class="line">print(result2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配对象</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">1.span - 匹配到的内容的范围，(开始下标, 结束下标), 结束下标取不到</span></span><br><span class="line"><span class="string">匹配对象.span()  - 获取整个正则表达式匹配到的范围</span></span><br><span class="line"><span class="string">匹配对象.span(n) - 获取正则表达式中第n个分组匹配到的范围(前提是有分组)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(result2.span())</span><br><span class="line">print(result2.span(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">2.start和end - 获取匹配结果的开始下标和结束下标</span></span><br><span class="line"><span class="string">匹配对象.start()/匹配对象.end() - 获取整个正则表达式匹配到的开始下标/结束下标</span></span><br><span class="line"><span class="string">匹配对象.start(n)/匹配对象.end(n) - 获取正则表达式中第n个分组匹配到的开始/结束下标</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(result2.start(), result2.end())</span><br><span class="line">print(result2.start(<span class="number">1</span>), result2.end(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">3.group - 获取匹配到的内容</span></span><br><span class="line"><span class="string">匹配对象.group() - 获取整个正则表达式匹配到的内容</span></span><br><span class="line"><span class="string">匹配对象.group(n) - 获取正则表达式中第n个分组匹配到的内容</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(result2.group())</span><br><span class="line">print(result2.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">4. string - 获取用来匹配的原字符串</span></span><br><span class="line"><span class="string">匹配对象.string</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(result2.string)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.search</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">search(正则表达式, 字符串) - 匹配字符串中第一个满足正则表达式的子串，如果匹配成功返回匹配对象否则返回None            </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">str1 = <span class="string">'abc123hks362shjjk990kll'</span></span><br><span class="line">result = re.search(<span class="string">r'\d&#123;3&#125;[a-z]&#123;2&#125;'</span>, str1)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.split</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">split(正则表达式, 字符串) - 在字符串中按照满足正则表达式条件的子串对字符串进行切割, 返回一个列表</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">str1 = <span class="string">'ab+c7hdjd8jss-sk9sjj78s9kk*k'</span></span><br><span class="line">result = re.split(<span class="string">r'\d+|[+*-]+'</span>, str1)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.sub</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">sub(正则表达式, 新子串, 字符串) - 用新子串替换字符串中满足正则表达式的子串，返回一个替换后的字符串</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">str1 = <span class="string">'你丫是傻    叉吗? 我操你大爷的. F u c k you.'</span></span><br><span class="line">result = re.sub(<span class="string">r'[丫操艹]|F\s*u\s*c\s*k|傻\s*叉'</span>, <span class="string">'*'</span>, str1)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.findall</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">findall(正则表达式, 字符串) - 在字符串中获取满足正则表达式的所有的字符，返回一个列表，列表元素是字符串</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意：如果这个正则表达式中有一个分组，结果是列表中只那个分组匹配到的结果</span></span><br><span class="line"><span class="string">     如果这个正则表达式中分组的个数大于1，结果是一个列表，列表中的元素是元祖，元祖中是每个分组匹配到的内容</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">str1 = <span class="string">'haja37jjkd89sdhs909nnna238==='</span></span><br><span class="line">result = re.findall(<span class="string">r'[a-zA-Z]&#123;2,&#125;(\d+)([a-z]+?)'</span>, str1)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.finditer</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">finditer(正则表达式, 字符串) - 获取字符串中满足正则表达式的内容，返回的是一个迭代器，迭代器中的元素是匹配对象</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">result = re.finditer(<span class="string">r'[a-zA-Z]&#123;2,&#125;(\d+)([a-z]+?)'</span>, str1)</span><br><span class="line">print(result)</span><br><span class="line">print(next(result))</span><br><span class="line">print(next(result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 思考：写一个自己finditer</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">yt_finditer</span><span class="params">(pattern, string)</span>:</span></span><br><span class="line">    re1 = re.search(pattern, string)</span><br><span class="line">    <span class="keyword">while</span> re1:</span><br><span class="line">        <span class="keyword">yield</span> re1</span><br><span class="line">        string = string[re1.end():]</span><br><span class="line">        re1 = re.search(pattern, string)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">'============'</span>)</span><br><span class="line">result = yt_finditer(<span class="string">r'[a-zA-Z]&#123;2,&#125;(\d+)([a-z]+?)'</span>, str1)</span><br><span class="line">print(next(result))</span><br><span class="line">print(next(result))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'234'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'234'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'2HK'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">3</span>), match=<span class="string">'8KL'</span>&gt;</span><br><span class="line">(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">8</span>KL</span><br><span class="line">KL</span><br><span class="line"><span class="number">8</span>KLsjdddd==</span><br><span class="line">&lt;re.Match object; span=(<span class="number">3</span>, <span class="number">8</span>), match=<span class="string">'123hk'</span>&gt;</span><br><span class="line">[<span class="string">'ab'</span>, <span class="string">'c'</span>, <span class="string">'hdjd'</span>, <span class="string">'jss'</span>, <span class="string">'sk'</span>, <span class="string">'sjj'</span>, <span class="string">'s'</span>, <span class="string">'kk'</span>, <span class="string">'k'</span>]</span><br><span class="line">你*是*吗? 我*你大爷的. * you.</span><br><span class="line">[(<span class="string">'37'</span>, <span class="string">'j'</span>), (<span class="string">'89'</span>, <span class="string">'s'</span>), (<span class="string">'909'</span>, <span class="string">'n'</span>)]</span><br><span class="line">&lt;callable_iterator object at <span class="number">0x0000022B3679DEF0</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">7</span>), match=<span class="string">'haja37j'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">7</span>, <span class="number">13</span>), match=<span class="string">'jkd89s'</span>&gt;</span><br><span class="line">============</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">7</span>), match=<span class="string">'haja37j'</span>&gt;</span><br><span class="line">&lt;re.Match object; span=(<span class="number">0</span>, <span class="number">6</span>), match=<span class="string">'jkd89s'</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><p><strong>下面为常用正则表达式</strong></p><h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、正则基本符号&quot;&gt;&lt;a href=&quot;#一、正则基本符号&quot; class=&quot;headerlink&quot; title=&quot;一、正则基本符号&quot;&gt;&lt;/a&gt;一、正则基本符号&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.什么是正则表达式&lt;br&gt;正则表达式就是字符匹配的工具;是由正则符号和普
      
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="正则" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>网络编程-socket</title>
    <link href="http://yoursite.com/2018/12/26/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%20-%20socket%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/12/26/网络编程 - socket编程/</id>
    <published>2018-12-26T14:59:45.213Z</published>
    <updated>2018-12-26T15:03:59.788Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、服务器套接字"><a href="#一、服务器套接字" class="headerlink" title="一、服务器套接字"></a>一、服务器套接字</h4><ul><li><p>socket又叫套接字，指的就是实现通信过程的两个端。等待请求的一端叫服务端套接字，发送请求的一端叫客户端套接字</p></li><li><p>python中提供了socket模块来支持socket编程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># ==========服务器套接字=============</span></span><br><span class="line"><span class="comment"># 1.创建套接字对象</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">socket(family, type)</span></span><br><span class="line"><span class="string">family - 设置ip类型   AF_INET(默认值) - ipv4   AF_INET6 - ipv6</span></span><br><span class="line"><span class="string">type - 设置传输类型  SOCK_STREAM(默认值) - tcp   SOCK_DGRAM - udp</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 创建一个基于ipv4和TCP的套接字对象</span></span><br><span class="line">server = socket.socket()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.绑定ip地址和端口</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">bind((ip地址, 端口号))</span></span><br><span class="line"><span class="string">ip地址 - 服务器对应的计算机的ip地址，字符串</span></span><br><span class="line"><span class="string">端口号 - 用来区分计算机上不同服务; 是一个数字，范围是0~65535;</span></span><br><span class="line"><span class="string">        但是其中1024以下的是著名端口，用来表示一个特殊的服务,一般不要用;</span></span><br><span class="line"><span class="string">        同一时间一个端口只能对应一个服务</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">server.bind((<span class="string">'10.7.187.149'</span>, <span class="number">8081</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.开始监听</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">listen(最大监听数) </span></span><br><span class="line"><span class="string">最大监听数 - 用来设置当前服务器一次可以处理多少个请求</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">server.listen(<span class="number">100</span>)</span><br><span class="line">print(<span class="string">'开始监听'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 让服务一直处于启动状态</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="comment"># 5.接收客户端发送的请求，返回建立的会话和客户端地址；</span></span><br><span class="line">    <span class="comment"># 注意，这段代码会阻塞线程(程序运行到这儿会停下来，直到有客户端给当前服务器发送请求为止)</span></span><br><span class="line">    conversation, addr = server.accept()</span><br><span class="line">    print(<span class="string">'接收到请求:'</span>, addr)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 6.接收消息(客户端发送给服务器的消息)</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    recv(缓存大小)  - 获取客户端给服务器发送的数据，返回值是二进制</span></span><br><span class="line"><span class="string">    缓存大小 - 决定一次可以接收的数据的最大字节数</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    这儿也会阻塞线程，直到客户端发送了消息才会接着往后执行</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    re_data = conversation.recv(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">'======'</span>)</span><br><span class="line">    print(re_data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 7.发送数据(服务器给客户端发送数据)</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    send(数据) - 将指定的数据发送给客户端</span></span><br><span class="line"><span class="string">    数据 - 要求是二进制</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    字符串(str)转二进制(bytes):</span></span><br><span class="line"><span class="string">    a.bytes(字符串, 'utf-8')</span></span><br><span class="line"><span class="string">    b.字符串.encode('utf-8')</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    二进制转字符串</span></span><br><span class="line"><span class="string">    a.str(二进制数据, 'utf-8')</span></span><br><span class="line"><span class="string">    b.二进制.decode('utf-8')</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># message = 'HTTP/1.1 200 OK\r\n\r\n &lt;html&gt;&lt;&lt;head&gt;&lt;meta charset="utf-8" /&gt;&lt;title&gt;表格&lt;/title&gt;&lt;/head&gt;&lt;body&gt;你好!&lt;/body&gt;&lt;/html&gt;'</span></span><br><span class="line">    message = <span class="string">'你好！！！'</span></span><br><span class="line">    <span class="comment"># conversation.send(bytes(message, encoding='utf-8'))</span></span><br><span class="line">    conversation.send(message.encode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 8.关闭连接</span></span><br><span class="line">    conversation.close()</span><br></pre></td></tr></table></figure></li></ul><p>二、客户端套接字<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建套接字对象</span></span><br><span class="line">client = socket.socket()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.连接服务器</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">connect((ip, 端口))</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">client.connect((<span class="string">'172.21.203.2'</span>, <span class="number">8088</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.发送消息</span></span><br><span class="line">message = input(<span class="string">'&gt;&gt;'</span>)</span><br><span class="line">client.send(message.encode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.接收消息</span></span><br><span class="line">re_data = client.recv(<span class="number">1024</span>)</span><br><span class="line">print(re_data.decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p><h4 id="三、网络请求"><a href="#三、网络请求" class="headerlink" title="三、网络请求"></a>三、网络请求</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">python中去做http请求，需要使用一个第三方库: requests</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">get(url, 参数字典) - 返回响应</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 1.向服务器发送get请求</span></span><br><span class="line"><span class="comment"># a.手动拼接url</span></span><br><span class="line"><span class="comment"># url = 'https://www.apiopen.top/satinApi?type=1&amp;page=1'</span></span><br><span class="line"><span class="comment"># response = requests.get(url)</span></span><br><span class="line"><span class="comment"># print(response)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b.自动拼接url</span></span><br><span class="line">url = <span class="string">'https://www.apiopen.top/satinApi'</span></span><br><span class="line">response = requests.get(url, &#123;<span class="string">'type'</span>: <span class="number">1</span>, <span class="string">'page'</span>: <span class="number">1</span>&#125;)</span><br><span class="line">print(response)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.获取响应头</span></span><br><span class="line">header = response.headers</span><br><span class="line">print(header)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.获取响应体</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">a.获取二进制格式的响应体</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">content = response.content</span><br><span class="line">print(type(content))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">b.获取json格式响应体 - 自动将json数据转换成python</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">json = response.json()</span><br><span class="line">print(type(json))</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">c.获取字符串格式的响应体</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">text = response.text</span><br><span class="line">print(type(text))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用：下载网络图片</span></span><br><span class="line">url = <span class="string">'https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b10000_10000&amp;sec=1543395098&amp;di=2a5bbaa5600097b050ba69a688672de9&amp;src=http://p0.qhimgs4.com/t0112e7ebfdef7f923d.jpg'</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">image_data = response.content</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'王也.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(image_data)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、服务器套接字&quot;&gt;&lt;a href=&quot;#一、服务器套接字&quot; class=&quot;headerlink&quot; title=&quot;一、服务器套接字&quot;&gt;&lt;/a&gt;一、服务器套接字&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;socket又叫套接字，指的就是实现通信过程的两个端。等待请求的一端叫服务
      
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="网络编程" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
      <category term="socket" scheme="http://yoursite.com/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用终端命令</title>
    <link href="http://yoursite.com/2018/12/22/Linux/"/>
    <id>http://yoursite.com/2018/12/22/Linux/</id>
    <published>2018-12-22T07:06:10.971Z</published>
    <updated>2018-12-25T13:51:26.633Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h3><p><strong>下面四个为ubantu安装更新命令</strong><br>sudo  apt  install 软件名         安装软件</p><p>sudo  apt  remove  软件名     卸载软件</p><p>sudo  apt   update                 更新可用软件列表</p><p>sudo  apt   upgrade                更新已安装的包</p><h4 id="常用文件指令"><a href="#常用文件指令" class="headerlink" title="常用文件指令"></a>常用文件指令</h4><p>命令                               对应英文                           作用<br>ls                                    list                                    查看当前文件夹的内容<br>pwd                                print work directory        查看当前所在文件夹<br>cd     【目录名】             change directory              切换文件夹<br>touch【文件名】             touch                                如果文件不存在，新建文件<br>mkdir【目录名】             make directory                 创建目录<br>rm     【文件名】             remove                             删除指定文件<br>clear                               clear                                  清屏</p><p>vim  文本文件                                                      修改文本内容<br>                                                                           esc 修改输入方式<br>                                                                           :wq  保存并退出<br>                                                                           :q!    强制退出<br>删除目录  rm -r 目录名<br>               rm  -i 文件或目录<br>               rm -f 强制删除</p><p>–help   和   man        显示…..命令的帮助信息<br>例：touch –help        或者  man touch<br>使用man时的操作<br>操作键                   功能<br>空格键                   显示手册页的下一屏<br>Enter                     一次滚动手册页的一行<br>b                           回滚一屏<br>f                             前滚一屏<br>q                            退出<br>/word                    搜索word字符串</p><p>以.开头的文件为隐藏文件，需要用-a参数才能显示<br>.代表当前目录<br>..代表上一级目录</p><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><p>ctr + f         - 前进一个字符<br>ctr + b        - 后退一个字符<br>ctr + a        - 回到行首<br>ctr + e         - 回到行尾<br>ctr + w        - 向左删除一个单词<br>ctr + u        - 向左删除全部<br>ctr + k        - 向右删除全部<br>ctr + y        - 粘贴上次删除的内容<br>ctr + l        - 清屏</p><h4 id="ls的通配符"><a href="#ls的通配符" class="headerlink" title="ls的通配符"></a>ls的通配符</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*          代表任意个字符</span><br><span class="line">？        代表一个字符  </span><br><span class="line">[]         表示匹配字符组中的任意一个</span><br><span class="line">[abc]    表示匹配a、b、c中的任意一个</span><br><span class="line">[a-f]     表示匹配a到f范围内的任意一个字符</span><br></pre></td></tr></table></figure><p>cd命令常用参数<br>（更改当前工作目录）<br>cd ~ 或cd 切换当前用户的主目录（/home/用户目录）<br>cd.    保持当前目录不变<br>cd..   切换到上级目录<br>cd -  可以在最近两次工作目录之间来回切换</p><p>mkdir -p  可以递归创建目录  如a/b/c/d</p><p>命令                               对应英文                           作用<br>tree[目录名]                   tree                                  以树状图列出文件目录结构<br>cp 源文件 目录文件         copy                                复制文件或目录<br>mv 源文件 目标文件        move                               移动文件或者目录/文件  或者目录重命名</p><p>-I  在执行cp或mv有提示作用</p><p>cat 文件名                      concatenate                     查看文件内容、创建文件、合并、追加文件内容等功能<br>more 文件名                  more                                分屏显示文件内容<br>grep 搜索文本文件文件名 grep                               搜索文本文件内容</p><p> cat      适合查看文件内容较少的文件<br> more  适合查看文件内容较多的文件<br>grep -n 显示匹配行及行号    -v显示不包括匹配文本的所有行    -i忽略大小写       </p><p>echo 重定向</p><p>管道 |<br>一个命令的输出  可以通过管道 作为 另一个命令的输入 例： ls -lh | more</p><h3 id="高级命令"><a href="#高级命令" class="headerlink" title="高级命令"></a>高级命令</h3><p>shutdown  关机/重新启动</p><p>-r 重新启动<br>shutdown -c  取消关机<br>shutdown -r now  立刻重启</p><p>Ctrl c  可以中断 终端命令</p><p>命令                                                  对应英文                                       作用<br>ifconfig                                        configure a network interface      查看/配置计算机当前网卡信息<br>ping ip 地址                                  ping                                              检测目标ip地址的连接是否正常</p><p>ssh 用户名@ip                               secure shell                                   关机/重新启动<br>scp 用户名@ip:文件名或路径<br>​       用户名@ip:文件名或路径             secure  copy                                远程复制文件</p><h4 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h4><p>常见服务器端口<br>SSH 服务器      22<br>Web 服务器     80<br>HTTPS             443<br>FTP 服务器       21</p><p>ifconfig     查看网卡状态</p><p>netstat   -natp                    - 查看网络连接状态<br>netstat   -natp|grep  端口号            - 查看指定端口的网络连接状态    </p><p>ping  地址<br>ping  -i   时间    地址<br>ping  -c  次数    地址</p><p>telnet  ip地址    端口         - 查看远程主机网络连接状况</p><p>dig 地址            - 查看DNS<br>wget  地址            - 下载</p><p>scp -P port     01.py     user@remote:Desktop/01.py<br>​            端口    原文件     远程复制的文件</p><p><strong>SSH 高级</strong></p><ul><li><p>免密码登录</p><p> 配置公匙<br> ssh-keygen 即可生成SSH 钥匙，回车即可<br> 上传公匙到服务器</p><p>  ssh-copy-id -p port user@remote,可以让服务器记住公匙</p><h4 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h4><p>chmod<br>可以修改文件或目录的权限<br>chmod  +/- rwx 文件名或目录名</p><p> 目录             拥有者权限             组权限               其他用户权限<br>文件权限示例          -  r   w   -           r   w   -               r   -      -<br>目录权限示例         d r   w    x         r   w   x               r   -      x</p></li></ul><p>组管理  终端命令<br>    命令                                    作用<br>  groupadd 组名                     添加组<br>  useradd -G 分组列表          添加组到指定目录<br>  groupdel  组名                      删除组<br>  cat/etc/group                       确认组信息<br>  chgrp 组名  文件/目录名        递归修改文件/目录所属组</p><p>用户管理  终端命令<br>   命令                                            作用                  说明<br>  useradd -m -g 组 新建用户名     添加新用户        -m 自动建立用户目录<br>                                                                             -g 指定用户所在的组，否则会建立一个同名的组<br>  passwd  用户名                          设置用户密码     如果是普通用户，可直接使用passwd修改自己的账户密码<br>  userdel -r 用户名                       删除用户             -r 选项会自动删除用户家目录<br>  cat/ect/passwd | grep 用户名    确认用户信息      新建用户后，用户信息会保存在/etc/passwd 文件中</p><p>查看用户信息<br>       命令                         作用<br>   id [用户名]                 查看用户UID和GID信息<br>   who                           查看当前所用登录的用户列表<br>   whoami                     查看当前登录用户的账户名</p><p>passwd文件<br>/etc/passwd 文件存放的是用户信息，由6个分号组成的7个信息<br>1.用户名<br>2.密码（x：表示加密的密码）<br>3.UID （用户标识）<br>4.GID （组标识）<br>5.用户全名或本地账号<br>6.家目录<br>7.登录使用的 Shell，就是登录之后使用的终端命令，ubantu默认是dash</p><p>usermod 修改用户登录 shell<br>usermod -s /bin/bash 用户名</p><p>/etc/passwd 是用于保护用户信息的文件<br>/usr/bin/passwd 是用于修改用户的密码</p><p>which 命令可以查看执行命令所在的位置<br>which ls   输出–&gt;  /bin/ls<br>which useradd  输出–&gt;  /usr/sbin/useradd</p><p>命令             作用                                    说明<br>su -用户名    切换用户，并且切换目录     - 可以切换到用户家目录，否则保持位置不变<br>exit               退出当前用户</p><p>su 不接用户名，可以切换到root，但不推荐使用，因为不安全</p><p>chown         修改拥有者<br>chgrp           修改组<br>chmod        修改权限</p><p>递归修改文件权限<br>chmod -R 755 文件名|目录名</p><pre><code> 拥有者              组                   其他r    w     x        r     w     x        r     w     x4   2       1       4    2      1       4     2     1      </code></pre><p> 0:表示没有权限</p><p>4    2      1               7               rwx<br>4    2      0               6               rw-<br>4    0      1               5               r-x<br>4    0      0               4               r–<br>0    2      1               3               -wx<br>0    2      0               2               -w-<br>0    0      1               1               –x<br>0    0      0               0               —</p><p>系统信息相关命令<br>时间和日期<br>date    查看系统时间<br>cal      calendar查看日历，-y选项可以查看一年的日历</p><p>df -h    disk free显示磁盘的剩余空间<br>du -h[目录名]     disk  usage显示目录下的文件大小</p><p>进程信息<br>ps aux           process status 查看进程的详细状况<br>top                 动态显示运行中的进程并且排序<br>kill [-9]进程代号   终止指定代号的进程，-9表示强行终止</p><p>a  显示终端上的所有进程，包括其他用户的进程<br>u  显示进程的详细状态<br>x  显示没有控制终端的进程</p><p>find [路径] -name “.py” 查找指定路径的扩展名是.py的文件，包括子目录</p><p>ln -s 被链接的源文件链接文件   建立文件的软连接，类似window的快捷方式<br> ———链接文件的路径要使用绝对路径</p><h4 id="打包和解压"><a href="#打包和解压" class="headerlink" title="打包和解压"></a>打包和解压</h4><p>tar  打包/解包<br>tar -cvf 打包文件.tar 被打包的文件/路径…<br>tar -xvf 解包文件.tar</p><p>c  生成档案文件，创建打包文件<br>x  解开档案文件<br>v  列出归档解档的详细过程，显示进度<br>f  制定档案文件名称，f后面一定是.tar文件，所以必须放选项最后<br>压缩文件<br>tar -zcvf  打包文件.tar.gz 被压缩的文件/路径…<br>解压缩文件<br>tar -zxvf 解包文件.tar.gz<br>解压缩到指定路径<br>tar -zxvf 解包文件.tar.gz -C目标路径 </p><p>bzip2<br>压缩文件<br>tar -jcvf  打包文件.tar.bz2 被压缩的文件/路径…<br>解压文件<br>tar -jxvf 解包文件.tar.bz2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基本指令&quot;&gt;&lt;a href=&quot;#基本指令&quot; class=&quot;headerlink&quot; title=&quot;基本指令&quot;&gt;&lt;/a&gt;基本指令&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;下面四个为ubantu安装更新命令&lt;/strong&gt;&lt;br&gt;sudo  apt  install 软件名  
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://yoursite.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>python基础语法</title>
    <link href="http://yoursite.com/2018/12/22/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/12/22/python基础语法/</id>
    <published>2018-12-22T06:36:58.612Z</published>
    <updated>2018-12-22T06:36:44.712Z</updated>
    
    <content type="html"><![CDATA[<h3 id="10-11"><a href="#10-11" class="headerlink" title="10 11"></a><strong>10 11</strong></h3><p>Python是一种解释型、面向对象、动态数据类型的高级程序设计语言</p><p>原码、反码、补码<br>原码：规定了字节数，写明了符号位，就得到数据的原码<br>反码：正数的反码是其原码，负数的反码是其原码的符号位不动，其他位取反</p><p>编译型语言–&gt;编译器–&gt;最终可执行文件<br>                                                                             操作系统（windows/Linux/Mac）–&gt;CPU<br>解释型语言–&gt;解释器（逐行解释每一句源代码）</p><p>IDE ：继承开发环境</p><p>Linux下重置pycharm<br>1、关闭正在运行的pycharm<br>2、rm -r ~/.pycharm2018.2<br>3、重启pycharm</p><p>注释：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 内容（#后应添加一个空格，以保持代码整齐）</span><br></pre></td></tr></table></figure></p><blockquote><p>  关于代码规范<br>  <a href="http://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">http://www.python.org/dev/peps/pep-0008/</a><br>  谷歌对应中文文档：<br>   <a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="noopener">http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></p></blockquote><p>算术运算符<br>// ：取整数  例： 9 // 2  ——&gt;4<br>% ：取余数  例： 9 % 2 ——&gt;1<br><strong> ：幂（次方）例： 2 </strong> 3 —-&gt;8<br>变量的类型<br>数字型<br>     整数型 int<br>     浮点型 float<br>     布尔型 bool<br>     复数型 complex  ：主要用于科学计算<br>非数字型<br>     字符串<br>     列表<br>     元祖<br>     字典<br>数据反转参考（ <a href="https://blog.csdn.net/weixin_41829272/article/details/80851720" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41829272/article/details/80851720</a> ）</p><h3 id="10-12"><a href="#10-12" class="headerlink" title="10 12"></a>10 12</h3><p>格式化字符       含义<br>%s                   字符串<br>%d                  有符号十进制整数，%06d 表示输出的整数显示位数，不足的地方用0补全<br>%f                   浮点数，%.02f 表示小数点后显示两位<br>%%                 输出%</p><p>代码缩进为一个tab键，或者4个空格  ———建议使用空格<br>Ctrl 加 /  表示快速注释</p><p>逻辑运算符<br>and   与<br>or      或者<br>not    非</p><h3 id="10-13"><a href="#10-13" class="headerlink" title="10 13"></a>10 13</h3><p>随机数<br>import  random   导入工具包<br>random.randint() 随机整数</p><p>程序开发的三大流程<br>-顺序：从上到下，按顺序执行代码<br>-分支：根据条件判断，决定执行代码的分支<br>-循环：让特定代码重复执行<br>break 和 continue<br>break：某一条件满足时，退出循环，不在执行后续重复的代码<br>continue ：某一条件满足时，不执行后续重复的代码</p><p>print 自动换行问题<br>print(“内容” end = “”) 取消自动换行</p><h3 id="10-14"><a href="#10-14" class="headerlink" title="10 14"></a>10 14</h3><p>函数<br><strong>具有独立功能的代码块  在需要的时候调用</strong><br>语法：  def  函数名():<br>                   函数封装的代码<br>                   …….<br>函数的调用： 函数名（）<br>函数文档注释：函数内使用”””  内容 “””    在调用函数处使用Ctrl +q 查看</p><ul><li>形参和实参<br>形参：定义函数时，小括号里的参数，是用来接收参数的，在函数内部作为 变量使用<br>实参：调用函数时，小括号里的参数，是用来把数据传递到 函数内部 使用的</li><li>函数的返回值<br>return 表示返回，后续的代码都不会执行</li></ul><p>高级变量类型<br>列表<br>元祖<br>字典<br>字符串</p><p>列表：在其他语言中通常叫 数组<br>          列表用[]定义，数据之间使用 , 分隔<br>          索引从0开始<br>          语法：例  names = [“张三”,”李四”]<br>列表常用操作方法<br>增加         列表.insert(索引，数据)        在指定位置插入数据<br>                列表.append(数据)              在末尾追加数据<br>                列表.extend(列表2)              将列表2 的数据追加到列表<br>修改         列表[索引] = 数据                修改指定索引的数据<br>删除         del 列表[索引]                      删除索引的数据<br>                列表.remove(数据)              删除第一个出现的指定数据<br>                列表.pop                             删除末尾数据<br>                列表.pop(索引)                    删除指定索引数据<br>                列表.clear                            清空列表<br>统计         len(列表)                              列表长度<br>                列表.count(数据)                  统计在列表中出现的次数<br>排序         列表.sort()                            升序排序<br>                列表.sort(reverse = True)    降序排序<br>                列表.reverse()                      逆序、反转<br>循环遍历： 从头到尾依次从列表中获取数据<br>                 在循环内部针对每一个元素，执行相同的操作</p><p>元组： 由多个元素组成的序列   与列表相似，不同之处  元组元素不能修改<br>元组用()定义</p><h3 id="10-15"><a href="#10-15" class="headerlink" title="10 15"></a>10 15</h3><p>字典：字典用{}定义<br>          字典使用键值对存储数据，键值对之间使用 , 分隔<br>              键 key  是索引（必须是不可变类型的变量）<br>              值 value  是数据 （可以是任意类型）<br>              键和值之间使用  : 分隔<br>              键必须是唯一的<br>              值可以取任何数据类型，但 键只能使用字符串、数字、元组</p><p>字符串<br>常用方法：<br>查找与替换          变量名.startswith ()      以…开头<br>                                     .endswith  ()      以…结束<br>                                     .find ()               指定查找内容<br>                                     .replace ()          替换<br>对齐                              .center()             居中对齐<br>                                     .ljust()                左对齐<br>                                     .rjust()                右对齐<br>去掉空白字符                 .strip()                去除空白字符<br>拆分和连接                    .split()                 拆分   返回一个列表类型<br>                                     .join()                 连接   返回一个字符串类型</p><p>字符串的切片<br>      切片 使用索引值来限定范围，从一个大的字符串中切出小的字符串<br> 语法：  字符串[开始索引 : 结束索引：步长]<br>index ：如果指定的字符串不存在，会报错<br>find ：如果指定的字符串不存在，会返回-1</p><h3 id="10-16"><a href="#10-16" class="headerlink" title="10 16"></a>10 16</h3><p>公共方法<br>python内置函数<br>len()                   计算容器中元素的个数<br>del()                   删除变量<br>max()                 返回容器中元素的最大值                 如果是字典只对key比较<br>min()                  返回容器中元素的最小值                 如果是字典只对key比较<br>**注意：字典没有大小比较<br>成员运算符： in   和  not in<br>完整的for循环语法：<br>           for  变量   in  集合:<br>                  循环体代码<br>           else:<br>                  没有通过break退出循环，循环执行后，会执行的代码</p><p>pycharm中TODO注释<br>在 # 后跟上 TODO，用于标记需要去做的工作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#！ ：叫做Shebang 或者 Sha-bang</span><br></pre></td></tr></table></figure></p><p>指明 执行这个脚本文件的解释程序</p><p>10 17</p><ul><li>变量高级<br>1.变量引用<br>2.可变类型（列表、字典）和不可变类型<br>3.局部变量和全局变量<br>   局部变量：在函数内部定义，只能在函数内部使用<pre><code>函数执行后，函数内部的局部变量，会被系统回收不同函数，可以定义相同名字的局部变量，互不影响</code></pre>   全局变量：在函数外部定义的变量，所有函数内部都能使用这个变量<pre><code>   在函数内部，可以通过全局变量的引用获取对应的数据   但是，不允许直接修改全局变量的引用（使用赋值语句修改全局变量的值）  在函数内部可以使用 global 关键字修改全局变量  语法：   num = 10               def  demo():                     global num  #声明num为全局变量                     num = 99    #修改注意：在开发时，应该把 所有的全局变量 定义在所有函数的上方</code></pre></li></ul><ul><li><p>交换两个数字<br>a = 6<br>b = 100<br>解法一：  使用临时变量</p><pre><code>c = bb = aa = c</code></pre><p>解法二： 不使用临时变量</p><pre><code>a = a + bb = a - ba = a - b</code></pre><p>解法三：Python专有，使用元组</p><pre><code>a,b = b,a   (等号右边是一个元组，只是把小括号省略了)</code></pre></li><li><p>函数的参数</p></li></ul><ol><li>符号 += ：在Python中，列表变量调用 += 本质上是在执行列表变量的 extend 方法，不会修改变量的引用<br>2.缺省参数：可以给某个参数 指定一个默认值，具有默认值的参数叫做 缺省参数<pre><code>注意：必须保证所有带有默认值的缺省参数在参数列表的末尾          再调用函数时，如果有多个缺省参数，需要指定参数名（明确参数的对应关系）</code></pre>3.多值参数：需要 一个函数能够处理的参数个数是不确定的时候，可以使用多值参数<pre><code>Python中的两种多值参数   1.参数名前增加一个 * 可以接收元组   2.参数名前增加两个 * 可以接受字典一般在给多值参数命名时，习惯以下两个名字    -   *args  ：存放元组参数，前面一个 *    -   **kwargs   ：存放字典参数，前面连个** 说明：*args 是arguments的缩写，有变量意义          kw 是keyword 的缩写， kwargs 可以记忆 键值对参数拆包：传递参数时   * 表示元组   ** 表示字典</code></pre></li></ol><ul><li>函数的递归<pre><code>函数自己调用自己特点： 函数内部可以调用自己也可以调用其他函数代码特点：函数内部的代码是相同的，只是针对参数不同，处理的结果不同                 当参数满足一个条件时，函数不在执行（这个非常重要，为递归的出口，否则进入死循环）</code></pre></li></ul><h3 id="10-18"><a href="#10-18" class="headerlink" title="10 18"></a>10 18</h3><p>控制台改变颜色<br>格式：print( ‘ \033[显示方式;前景色;背景色m ‘ )</p><p> 说明：<br> 前景色            背景色           颜色<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">30                40              黑色</span><br><span class="line">31                41              红色</span><br><span class="line">32                42              绿色</span><br><span class="line">33                43              黃色</span><br><span class="line">34                44              蓝色</span><br><span class="line">35                45              紫红色</span><br><span class="line">36                46              青蓝色</span><br><span class="line">37                47              白色</span><br></pre></td></tr></table></figure></p><p>显示方式           意义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0                终端默认设置</span><br><span class="line">1                高亮显示</span><br><span class="line">4                使用下划线</span><br><span class="line">5                闪烁</span><br><span class="line">7                反白显示</span><br><span class="line">8                不可见</span><br></pre></td></tr></table></figure><h3 id="10-20"><a href="#10-20" class="headerlink" title="10 20"></a>10 20</h3><p>面向对象<br>❶封装<br>  1.类和对象：</p><pre><code>类：是一个模板，负责创建对象对象：由类创造出来的一个具体存在</code></pre><p>  2.类的三要素<br>                 类名：满足大驼峰命名法（每个单词首字母大写，单词与单词之间没有下划线）<br>                 属性：对对象的特征描述<br>                 方法：对象的行为<br>  3.面向对象基础语法：<br>               dir内置函数：dir传入标识符/数据，可以查看内置方法/属性   dir( 标识符/数据 )<br>      <strong><strong>*</strong></strong>  由哪一个对象调用的方法，方法内的 self 就是哪一个对象的引用 –语法：dir(类名)<br>                      在类封装的方法内部，self 就表示 当前地哦啊用方法的对象自己<br>        一个对象的 属性 可以是 另一个 类创建的对象  参考（tj_09_oop案例2.py）<br>  4.身份运算符<br>       比较两个对象的内存地址是否一致 —是否是对同一个对象的引用<br>       x  is  y    类似 id(x) == id (y)<br>       x  not is y  类似   id(x)  != id(y)<br>  5.私有属性和私有方法（不希望公开的）<br>         定义方式：在 属性名或者方法名前增加两个 下划线<br>          如果非要访问：  _类名<strong>名称<br>❷继承（实现代码的重用）<br>       语法：<br>        class 子类（父类）：<br>               pass<br>  1.单继承<br>      子类拥有父类的所有方法和属性<br>  2.多继承<br>       子类拥有多个父类，并且具有所有父类的属性和方法<br>       MRO– 方法搜索顺序：内置属性 </strong>mro__可以查看方法的搜索顺序—-print(类名，<strong>mro</strong>)</p><h3 id="10-21"><a href="#10-21" class="headerlink" title="10 21"></a>10 21</h3><p>❸多态（不同的子类对象调用相同的父类方法，产生不同的执行结果）</p><pre><code>多态可以增加代码的灵活度以子类和重写父类的方法为前提</code></pre><p>术语—-实例<br>       创建出来的对象叫做类的实例<br>       创建对象的动作叫做实例化<br>       对象的属性叫做实例属性<br>       对象调用的方法叫做实例方法<br>类方法（方法内部字需要访问类属性）<br>    语法：<br>        @classmethod<br>        def  类方法名(cls):<br>                pass</p><p>静态方法(方法内部，不需要访问实例属性和类属性，调用时不需要实例化）<br>     语法：<br>         @staticmethod<br>         def  静态方法名():<br>                pass</p><p>单例<br>   单例设计模式：目的（让创建的对象，在系统中只有唯一的一个实例，每一次执行 类名() 返回的对象，内存地址是相同的）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__new__ 方法：由object 基类提供的内置方法</span><br></pre></td></tr></table></figure></p><p>作用： 在内存中为对象分配空间,返回对象的引用<br>捕获异常<br>语法：  try:<br>                 可能出现异常的代码<br>            except:<br>                 出现异常执行的代码</p><pre><code>捕获未知错误        语法：      except  Exception  as  result:                                  print(&quot;未知错误 %s&quot;  %result)</code></pre><p>捕获异常 完整语法 ：<br>             try:<br>                 可能出现异常的代码<br>             except:<br>                 出现异常执行的代码<br>             except:<br>                 出现异常执行的代码<br>              …<br>              except  Exception  as  result:<br>                          print(“未知错误 %s”  %result)<br>              else:<br>                     没有异常才会执行的代码<br>              finally：<br>                       无论是否异常，都会执行的代</p><h3 id="10-22"><a href="#10-22" class="headerlink" title="10 22"></a>10 22</h3><p>模块<br>   模块的别名</p><pre><code>    语法：  import   模块名  as   别名（大驼峰命名）form...import （部分工具导入，导入之后调用不需要使用模块名可以直接使用）form  模块名  import  工具名 注意事项：如果两个模块，存在同名的函数，那么后倒入模块的函数，会覆盖掉先导入的函数form...import * (导入所有模块工具） __file__可以查看模块的完整路径 （  print(模块名 . __file__)  ）__name__内置属性：测试模块的代码只在测试情况下运行，而在被导入时不会被执行</code></pre><p>包<br>     包含多个模块的特殊目录<br>     目录下有一个特殊的文件  <strong>init</strong>.py<br>     包名的命名方式和变量命名一致</p><p>文件操作（1个函数 3个方法）<br>           open            打开文件，并且返回文件操作对象<br>           read             将文件内容读取到内存<br>           write            将指定内容写入文件<br>           close            关闭文件<br>        打开文件演练：<br>                  1.打开（文件名需要注意大小写）<br>                  file = open(“文件名”)<br>                  2.读取<br>                  text = file.read()<br>                  print(text)<br>                  3.关闭<br>                  file.close()<br>eval 函数 ：将字符串当成有效的表达式来求值并返回计算结果</p><p>url<br>统一资源定位符<br>URL基本格式  = 协议://主机地址/路径</p><p>HTTP /HTTPs</p><p>TCP:可靠传输，传输时建立会话<br>UDP:不可靠传输，不会建立会话</p><h3 id="10-23"><a href="#10-23" class="headerlink" title="10 23"></a>10 23</h3><p>进程：正在运行的程序、独立</p><p>线程：一个进程想要执行任务，必须要有线程（每1个进程至少要有1条线程）<br>       进程的所有任务都是在线程中执行的<br>线程的串行<br>1个线程中的任务是串行的</p><ul><li>多线程：1个进程可以开启多条线程，每1条线程可以并行（同时）执行不同的任务</li></ul><p>原理：同一时间，cpu只能处理一条线程，只有1条线程在工作</p><pre><code>多个线程之间来回调度（切换</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;10-11&quot;&gt;&lt;a href=&quot;#10-11&quot; class=&quot;headerlink&quot; title=&quot;10 11&quot;&gt;&lt;/a&gt;&lt;strong&gt;10 11&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Python是一种解释型、面向对象、动态数据类型的高级程序设计语言&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="自学记录" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AD%A6%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>vim编辑器之神</title>
    <link href="http://yoursite.com/2018/12/22/vim%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8B%E7%A5%9E/"/>
    <id>http://yoursite.com/2018/12/22/vim编辑器之神/</id>
    <published>2018-12-22T03:40:51.420Z</published>
    <updated>2018-12-26T15:04:49.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim编辑器之神"><a href="#vim编辑器之神" class="headerlink" title="vim编辑器之神"></a>vim编辑器之神</h1><h3 id="配置vimrc配置"><a href="#配置vimrc配置" class="headerlink" title="配置vimrc配置"></a>配置vimrc配置</h3><p>在shell中可以通过 <code>vim ~/.vimrc</code> 或者 <code>vim /etc/vimrc</code> 打开vimrc文件对vim进行配置。在这个文件中可以进行很多和vim相关的配置，常用的如下（如果对其他配置感兴趣的可以自己百度）：</p><p><img src="/img/vim1.png" alt=""> </p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="1-模式切换"><a href="#1-模式切换" class="headerlink" title="1.模式切换"></a>1.模式切换</h4><p>我们可以将vim分为命令模式、编辑模式和末行模式三种<br><strong>命令模式：</strong>进入vim的时候vim是处于命令模式状态下的，这个时候输入内容不会出现在编辑区  (最末什么都没有)</p><p><strong>末行模式：</strong>在命令模式下输入冒号，让vim进入末行模式。在末行模式的冒号后面可以输入相关的一些指令进行相关操作  (最后有一个冒号)</p><p><strong>编辑模式：</strong>在命令模式下按’i’进入编辑模式。在编辑模式下可以对文件内容进行编辑 (最后 –INSERT– 或者 –插入–)  </p><p>####2.保存和退出<br>在末行模式下输入相应的指令可以对编辑区的内容进行保存和退出vim界面<br><strong>w</strong> – 只保存(类似快捷键ctr+s)<br><strong>q</strong> – 退出（在编辑区的内容全部都保存的情况下才有效）<br><strong>wq</strong> – 保存并退出<br><strong>q!</strong>  – 强制退出（不保存修改信息）    </p><p>####3.光标操作<br>以下光标操作都是在命令模式下输入的<br><strong>^(shift+6)</strong>  – 移动到行首<br><strong>$(shift+4)</strong>  – 移动到行尾<br><strong>G(shift+g)</strong>    – 移动到文件末尾<br><strong>行号G</strong>            – 移动到指定行,例如:30G, 让光标直接跳转到行号是30的那一行<br><strong>gg</strong>                – 移动到文件开头  </p><p>####4.文本操作<br>以下操作不带冒号的是在命令模式下输入，前面有冒号代码后面的内容是在末行模式下输入<br><strong>dd</strong>            – 删除光标所在的行<br><strong>数字dd</strong>        – 从光标所在行开始往后面开始删，删除指定数量行内容<br><strong>:%d</strong>        – 删除所有     </p><p><strong>yy</strong>         – 复制光标所在的行<br><strong>数字yy</strong>        – 从光标所在行开始复制指定行数的内容<br><strong>p</strong>            – 将复制的内容粘贴到光标所在的位置<br><strong>u</strong>            – 撤销<br><strong>ctr+r</strong>    – 反撤销    </p><p><strong>:%!sort</strong>  – 对内容排序  </p><p><strong>:/查找对象[/gice]</strong>    – 搜索匹配正则表达式的内容，按回车回到命令模式后按n往前查找，按N往后查找  </p><p>*<em>:1,$s/被替换对象/替换内容[/gice</em>]*    – 将正则表达式匹配到的内容替换成指定内容   </p><pre><code>-    g: 全局匹配  -     i: 忽略大小写 -   c: 替换时需要提示  -   e: 忽略错误  </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vim编辑器之神&quot;&gt;&lt;a href=&quot;#vim编辑器之神&quot; class=&quot;headerlink&quot; title=&quot;vim编辑器之神&quot;&gt;&lt;/a&gt;vim编辑器之神&lt;/h1&gt;&lt;h3 id=&quot;配置vimrc配置&quot;&gt;&lt;a href=&quot;#配置vimrc配置&quot; class=&quot;he
      
    
    </summary>
    
      <category term="编辑器" scheme="http://yoursite.com/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Nginx服务器</title>
    <link href="http://yoursite.com/2018/12/22/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/12/22/Nginx服务器安装/</id>
    <published>2018-12-22T03:40:48.662Z</published>
    <updated>2018-12-26T15:00:53.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx服务器"><a href="#Nginx服务器" class="headerlink" title="Nginx服务器"></a>Nginx服务器</h1><h3 id="1-阿里云添加80端口"><a href="#1-阿里云添加80端口" class="headerlink" title="1.阿里云添加80端口"></a>1.阿里云添加80端口</h3><p>阿里云上默认只有一个22端口用来做远程登录，如果希望在阿里云上安装支持http请求的nginx服务器，需要给阿里云添加80端口</p><p><img src="/img/aliyun0.png" alt="打开安全组设置"><br><img src="/img/aliyun2.png" alt=""><br><img src="/img/aliyun3.png" alt=""><br><img src="/img/aliyun4.png" alt=""></p><h3 id="2-安装nginx"><a href="#2-安装nginx" class="headerlink" title="2. 安装nginx"></a>2. 安装nginx</h3><p>a) 添加nginx存储库  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><p>b) 安装nginx</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><p>c) 运行nginx<br>Nginx不会自行启动。要运行Nginx  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><p>nginx的运行命令:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx 查看nginx的状态  </span><br><span class="line">systemctl start/stop/enable/disable nginx 启动/关闭/设置开机启动/禁止开机启动</span><br></pre></td></tr></table></figure><p>d) 系统启动时启动Nginx  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure><p>e）如果您正在运行防火墙，请运行以下命令以允许HTTP和HTTPS通信：   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=http </span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class="line"></span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="3-nginx目录共享配置"><a href="#3-nginx目录共享配置" class="headerlink" title="3.nginx目录共享配置"></a>3.nginx目录共享配置</h3><p>a) 在contOS目录中确定一个需要共享的文件夹，例如： /home/yuting<br>b) 打开 etc/nginx/nginx.conf 文件，设置server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#共享设置 - 在浏览器中输入服务器ip地址，会展示共享目录的文件列表</span><br><span class="line">root /home/yuting;</span><br><span class="line">location / &#123;</span><br><span class="line">       autoindex on;</span><br><span class="line">       autoindex_exact_size on;</span><br><span class="line">       autoindex_localtime on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了可以共享文件，还可以自定义页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#自定义服务器页面</span><br><span class="line">location / &#123;</span><br><span class="line">root /home/yuting;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意： 如果出现权限问题，可以修改目录的权限  </p><h1 id="ssh密钥认证"><a href="#ssh密钥认证" class="headerlink" title="ssh密钥认证"></a>ssh密钥认证</h1><p>1.在主机和从机上执行：<code>ssh-keygen</code></p><p>2.在从机上执行:  <code>scp  id_rsa.pub  root@主机地址:~/.ssh/master.pub</code><br>(上面这条指令是将从机上的 id_rsa.pub文件拷贝传递给到主机的.ssh文件夹下，并且命名为’master.pub’)</p><p>3.在主机中的.ssh文件夹中创建authorized_keys文件： <code>touch authorized_keys</code> </p><p>4.修改文件authorized_keys的权限: <code>chmod 600  authorized_keys</code>  </p><p>5.将master.pub放进authorized_keys文件中:  <code>cat master.pub &gt;&gt;  authorized_keys</code></p><p>6.在操作主机的时候，需要主机能够自己免密访问自己就将自己的公钥放在自己的authorized_keys文件中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nginx服务器&quot;&gt;&lt;a href=&quot;#Nginx服务器&quot; class=&quot;headerlink&quot; title=&quot;Nginx服务器&quot;&gt;&lt;/a&gt;Nginx服务器&lt;/h1&gt;&lt;h3 id=&quot;1-阿里云添加80端口&quot;&gt;&lt;a href=&quot;#1-阿里云添加80端口&quot; class
      
    
    </summary>
    
      <category term="服务器" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>git常用指令</title>
    <link href="http://yoursite.com/2018/12/22/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/12/22/git常用指令/</id>
    <published>2018-12-22T03:40:45.168Z</published>
    <updated>2018-12-26T15:02:29.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git常用指令"><a href="#git常用指令" class="headerlink" title="git常用指令"></a>git常用指令</h1><h2 id="1-基本指令"><a href="#1-基本指令" class="headerlink" title="1.基本指令"></a>1.基本指令</h2><p><code>git init</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ——  新建git仓库<br><code>git add 文件/文件夹</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ——  将文件添加到缓存区中<br><code>git add -A</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; — 添加所有内容到缓存区中<br><code>git stutas</code> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;———    查看git状态<br><code>git commit -m  ‘提交信息’</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——  将缓存区中的内容全部提交到git本地仓库中  </p><p><code>git log</code>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——-    查看提交日志  </p><p><code>git reset  - - hard   HEAD</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——   让工作目录中的内容和仓库中的内容保持一致<br><code>git reset  --hard HEAD^</code>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——  回到上一个版本<br><code>git  reset  - - hard 版本号</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——  回到指定的版本<br><code>git checkout  - -  文件名</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ——  从暂存区中恢复工作目录中的内容(让工作区中的指定文件，回到上次提交的时候的状态)  </p><p><code>git clone &lt;url&gt;</code> - 将服务器上的项目(仓库)克隆 (使用https地址需要输入密码，使用ssh地址需要添加公钥)  </p><p><code>git remote add origin 地址</code>      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—– 关联远程仓库(只需要关联一次)</p><p><code>git push [-u] origin master</code>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—– 提交(-u在第一次提交分之的时候才用)  </p><h2 id="2-分之管理"><a href="#2-分之管理" class="headerlink" title="2.分之管理"></a>2.分之管理</h2><p>创建仓库会默认给我们创建一个master分之,这个分之一般作为提交和发布分之;开发一般会自己创建一个develop分之，用来开发和测试;多人协作的时候还可能根据不同的人或者(不同的功能)创建不同的分之，用来独立开发  </p><p>常见分之： master(主要是合并develop), develop(主要合并下面的其他分支), 功能/人员分之(开发)  </p><p><code>git branch [-a]</code>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        - 查看分之<br><code>git branch 分之名</code>        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- 创建分之<br><code>git checkout   分支名</code>        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-   切换分之<br><code>git checkout -b 分之名</code>        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    - 切换并创建新的分之<br><code>git diff    分之1  分之2</code>        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- 查看两个分之之间的差异<br><code>git merge 分之名</code>            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- 让当前分之和指定分之进行合并     </p><p>注意: 切换分之、push、pull，这些操作前要保证工作区是clean  </p><p>怎么避免冲突：  不要发生多个分之对同一个文件在同一个版本下进行修改(和同伴确认和商量)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;git常用指令&quot;&gt;&lt;a href=&quot;#git常用指令&quot; class=&quot;headerlink&quot; title=&quot;git常用指令&quot;&gt;&lt;/a&gt;git常用指令&lt;/h1&gt;&lt;h2 id=&quot;1-基本指令&quot;&gt;&lt;a href=&quot;#1-基本指令&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>ssh免密登陆及登陆失败后的解决办法</title>
    <link href="http://yoursite.com/2018/12/21/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/"/>
    <id>http://yoursite.com/2018/12/21/ssh免密登陆/</id>
    <published>2018-12-21T13:38:55.286Z</published>
    <updated>2018-12-21T13:41:23.755Z</updated>
    
    <content type="html"><![CDATA[<h4 id="这篇文章主要给大家介绍了关于centos配置ssh免密码登录以及登录后仍要输入密码的解决方法-需要的朋友可以参考下"><a href="#这篇文章主要给大家介绍了关于centos配置ssh免密码登录以及登录后仍要输入密码的解决方法-需要的朋友可以参考下" class="headerlink" title="这篇文章主要给大家介绍了关于centos配置ssh免密码登录以及登录后仍要输入密码的解决方法,需要的朋友可以参考下"></a>这篇文章主要给大家介绍了关于centos配置ssh免密码登录以及登录后仍要输入密码的解决方法,需要的朋友可以参考下</h4><ul><li>首先，我们需要明白为什么要设置SSH免密码登录，其原因是我们在开启服务器的时候需要多次输入yes和root密码，这是我们所不能忍受的，我们迫切需要实现免登录的功能</li></ul><p><font color="#dd0000">第一步：在本机中创建秘钥</font><br><br>1.执行命令：</p><blockquote><p>ssh-keygen -t rsa -C “<a href="mailto:xx@qq.com" target="_blank" rel="noopener">xx@qq.com</a>“<br>(随便编个字符串，一般用邮箱）<br><strong>注意事项</strong><br>2、之后一路回车就行啦；会在～（home）目录下中产生.ssh（隐藏）文件夹；<br>3、里面有两个文件id_rsa(私钥)、id_rsa.pub(公钥)文件<br>注意事项：<br>①在liunx环境下，要想复制公钥或是私钥，不要使用vim等编辑器打开文件来复制粘贴；<br>因为它会产生不必要的回车。<br>②应该使用cat把内容打印到终端上再来复制粘贴；</p><p><font color="#dd0000">第二步：用 ssh-copy-id 把公钥复制到远程主机上</font><br><br>ssh-copy-id <a href="mailto:zhangming@192.168.161.132" target="_blank" rel="noopener">zhangming@192.168.161.132</a><br>把秘钥拷贝到远程服务器</p></blockquote><p>用这种方式拷贝使用的端口是Linux默认的22，如果你想指定端口，可以使用：</p><p>ssh-copy-id -i /用户名/.ssh/id_rsa.pub ‘-p 端口号 用户名@106.75.52.44’</p><blockquote><p>ssh-copy-id -i /root/.ssh/id_rsa.pub ‘-p 22222 <a href="mailto:root@106.75.52.44" target="_blank" rel="noopener">root@106.75.52.44</a>‘<br>这里可能需要等一段时间，反正我是等了挺久的时间，然后显示要你输入密码：</p></blockquote><p><a href="mailto:zhangming@106.75.52.44" target="_blank" rel="noopener">zhangming@106.75.52.44</a>‘s password:<br>输入完密码后，显示：<br>Now try logging into the machine, with “ssh ‘-p 22222 <a href="mailto:root@106.75.52.44" target="_blank" rel="noopener">root@106.75.52.44</a>‘“, and check in:<br> .ssh/authorized_keys<br>to make sure we haven’t added extra keys that you weren’t expecting.<br>表示成功了！</p><p><font color="#dd0000">第三步：远程登入</font><br></p><blockquote><p>[zhangming@localhost ~]$ ssh <a href="mailto:zhangming@192.168.161.134" target="_blank" rel="noopener">zhangming@192.168.161.134</a><br>Last login: Mon Oct 10 14:18:54 2016 from 192.168.161.135<br>ssh <a href="mailto:zhangming@123.59.44.56" target="_blank" rel="noopener">zhangming@123.59.44.56</a> -p 22222</p></blockquote><p> <strong>注意</strong><br> 遇到的大坑：<br>配置ssh免密码登录后，仍提示输入密码</p><blockquote><p>解决方法：<br>首先我们就要去查看系统的日志文件<br>cat /var/log/secure </p></blockquote><p>发现问题的所在：Authentication refused: bad ownership or modes for file<br>从字面上可以看出是目录的属主和权限配置不当，查找资料得知：SSH不希望home目录和~/.ssh目录对组有写权限，通过下面几条命令改下</p><blockquote><p>g-w /home/zhangming<br>chmod 700 /home/zhangming/.ssh<br>chmod 600 /home/zhangming/.ssh/authorized_keys<br>然后我们再去登录，就能不用密码进入了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;这篇文章主要给大家介绍了关于centos配置ssh免密码登录以及登录后仍要输入密码的解决方法-需要的朋友可以参考下&quot;&gt;&lt;a href=&quot;#这篇文章主要给大家介绍了关于centos配置ssh免密码登录以及登录后仍要输入密码的解决方法-需要的朋友可以参考下&quot; clas
      
    
    </summary>
    
      <category term="服务器" scheme="http://yoursite.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/12/19/hello-world/"/>
    <id>http://yoursite.com/2018/12/19/hello-world/</id>
    <published>2018-12-19T12:35:58.468Z</published>
    <updated>2018-12-22T08:20:50.834Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Diary" scheme="http://yoursite.com/categories/Diary/"/>
    
    
      <category term="Hello" scheme="http://yoursite.com/tags/Hello/"/>
    
      <category term="World" scheme="http://yoursite.com/tags/World/"/>
    
  </entry>
  
</feed>
